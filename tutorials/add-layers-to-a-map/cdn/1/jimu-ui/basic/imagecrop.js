System.register(["jimu-core","jimu-for-builder","jimu-ui"],(function(t,e){var o={},i={},s={};return{setters:[function(t){o.React=t.React,o.ReactDOM=t.ReactDOM,o.ReactResizeDetector=t.ReactResizeDetector,o.ResourceType=t.ResourceType,o.classNames=t.classNames,o.css=t.css,o.getAppStore=t.getAppStore,o.jsx=t.jsx,o.moduleLoader=t.moduleLoader},function(t){i.AppResourceManager=t.AppResourceManager},function(t){s.CropType=t.CropType}],execute:function(){t((()=>{var t={18371:t=>{t.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path fill="#000" d="m6.036 12.157 8.01-8.01a.5.5 0 1 1 .707.707l-8.01 8.01a1 1 0 0 1-1.415 0L1.146 8.682a.5.5 0 1 1 .708-.707z"></path></svg>'},55339:t=>{t.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path fill="#000" d="m8.745 8 6.1 6.1a.527.527 0 1 1-.745.746L8 8.746l-6.1 6.1a.527.527 0 1 1-.746-.746l6.1-6.1-6.1-6.1a.527.527 0 0 1 .746-.746l6.1 6.1 6.1-6.1a.527.527 0 0 1 .746.746z"></path></svg>'},48891:t=>{"use strict";t.exports=o},23137:t=>{"use strict";t.exports=i},30726:t=>{"use strict";t.exports=s}},e={};function r(o){var i=e[o];if(void 0!==i)return i.exports;var s=e[o]={exports:{}};return t[o](s,s.exports,r),s.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var o in e)r.o(e,o)&&!r.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var n={};return(()=>{"use strict";r.r(n),r.d(n,{CropType:()=>x.CropType,ImageCrop:()=>y});var t=r(48891),e=r(18371),o=r.n(e);const i=e=>{const i=window.SVG,{className:s}=e,r=function(t,e){var o={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.indexOf(i)<0&&(o[i]=t[i]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(i=Object.getOwnPropertySymbols(t);s<i.length;s++)e.indexOf(i[s])<0&&Object.prototype.propertyIsEnumerable.call(t,i[s])&&(o[i[s]]=t[i[s]])}return o}(e,["className"]),n=(0,t.classNames)("jimu-icon jimu-icon-component",s);return i?t.React.createElement(i,Object.assign({className:n,src:o()},r)):t.React.createElement("svg",Object.assign({className:n},r))};var s=r(55339),a=r.n(s);const h=e=>{const o=window.SVG,{className:i}=e,s=function(t,e){var o={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.indexOf(i)<0&&(o[i]=t[i]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(i=Object.getOwnPropertySymbols(t);s<i.length;s++)e.indexOf(i[s])<0&&Object.prototype.propertyIsEnumerable.call(t,i[s])&&(o[i[s]]=t[i[s]])}return o}(e,["className"]),r=(0,t.classNames)("jimu-icon jimu-icon-component",i);return o?t.React.createElement(o,Object.assign({className:r,src:a()},s)):t.React.createElement("svg",Object.assign({className:r},s))};class p extends t.React.Component{render(){let{showGrid:e,style:o,className:s}=this.props;s||(s="");const r=o.width,n={display:"flex",alignItems:"center",justifyContent:"flex-end",minWidth:"75px",paddingBottom:"5px",left:"-1px",paddingTop:"5px",position:"absolute",top:"-40px",height:"40px",width:`${Math.min(this.props.screenWidth,r)}px`,boxShadow:"0 2px 8px 1px rgba(0,0,0,0.20)",backgroundColor:"#fff",borderRadius:"2px",cursor:"default"};this.props.widgetArea.top-40<0&&(n.top=`${this.props.widgetArea.height}px`);const a=t.React.createElement("div",{onMouseDown:t=>{t.stopPropagation()},style:n},t.React.createElement("div",{className:"tool-item mr-1",style:{float:"right",padding:"0.42rem 0.5rem"},onClick:()=>{this.props.onConfirmCrop&&this.props.onConfirmCrop(this.props.svgViewBox,this.props.svgPath,this.props.cropShape)}},t.React.createElement(i,{className:"mr-0"})),t.React.createElement("div",{className:"tool-item mr-1",style:{float:"right",padding:"0.42rem 0.5rem",marginLeft:"0.1rem"},onClick:()=>{this.props.onCancelCrop&&this.props.onCancelCrop()}},t.React.createElement(h,{size:13,className:"mr-0"})));return t.React.createElement("div",{style:o,className:(0,t.classNames)("cropperArea "+s,{gridLines:e})},t.React.createElement("svg",{width:"100%",height:"100%",viewBox:this.props.svgViewBox?this.props.svgViewBox:"0 0 28 28",preserveAspectRatio:"none"},t.React.createElement("defs",null,t.React.createElement("mask",{id:`mask-setting-${this.props.widgetId}`,maskContentUnits:"userSpaceOnUse"},t.React.createElement("rect",{x:"0",y:"0",width:"100%",height:"100%",stroke:"none",fill:"rgb(255, 255, 255, 1)"}),t.React.createElement("svg",{width:"100%",height:"100%",viewBox:this.props.svgViewBox?this.props.svgViewBox:"0 0 28 28",preserveAspectRatio:"none"},t.React.createElement("g",null,t.React.createElement("path",{strokeWidth:"2",strokeDasharray:"10",strokeDashoffset:"0",fill:"#000",d:this.props.svgPath?this.props.svgPath:"m0,0l0,28l28,0l0,-28l-28,0z"}))))),t.React.createElement("rect",{x:"0",y:"0",width:"100%",height:"100%",className:"mask-image",style:{stroke:"none",fill:"rgb(0, 0, 0, 0.7)"}}),t.React.createElement("g",null,t.React.createElement("path",{stroke:"#fff",strokeWidth:".1",fill:"none",strokeDashoffset:"0",d:this.props.svgPath?this.props.svgPath:"m0,0l0,28l28,0l0,-28l-28,0z"}))),a)}}var c=r(23137),m=function(t,e,o,i){return new(o||(o=Promise))((function(s,r){function n(t){try{h(i.next(t))}catch(t){r(t)}}function a(t){try{h(i.throw(t))}catch(t){r(t)}}function h(t){var e;t.done?s(t.value):(e=t.value,e instanceof o?e:new o((function(t){t(e)}))).then(n,a)}h((i=i.apply(t,e||[])).next())}))};function l(t,e,o,i){return{x:g(t.x,e.width,o.width,i),y:g(t.y,e.height,o.height,i)}}function g(t,e,o,i){const s=e*i/2-o/2;return Math.min(s,Math.max(t,-s))}function d(t,e){return Math.sqrt(Math.pow(t.y-e.y,2)+Math.pow(t.x-e.x,2))}function u(t,e){return Math.min(t,Math.max(0,e))}function f(t,e){return{x:(e.x+t.x)/2,y:(e.y+t.y)/2}}class w extends t.React.Component{constructor(e){super(e),this.image=null,this.container=null,this.containerRect={},this.imageSize={width:0,height:0,naturalWidth:0,naturalHeight:0},this.dragStartPosition={x:0,y:0},this.dragStartCrop={x:0,y:0},this.lastPinchDistance=0,this.rafDragTimeout=null,this.rafZoomTimeout=null,this.screenWidth=document?document.documentElement.clientWidth:null,this.screenHeight=document?document.documentElement.clientHeight:null,this.getStyle=()=>{const e=window.location.origin+window.location.pathname+window.location.search;return t.css`
      .cropperArea {
        position: relative;
        border: 1px solid rgba(255, 255, 255, 0.5);
        box-sizing: border-box;
        box-shadow: 0 0 0 9999em;
        color: rgba(0,0,0,0.5);

        .tool-item {
          background-color: #EEF0F3;
          cursor: pointer;

          &:hover {
            background-color: #c8cbcd;
            cursor: pointer;
          }
        }
      }

      .gridLines {
        &::before {
          content: " ";
          box-sizing: border-box;
          position: absolute;
          border: 1px solid rgba(255, 255, 255, 0.5);
          top: 0;
          bottom: 0;
          left: 33.33%;
          right: 33.33%;
          border-top: 0;
          border-bottom: 0;
        }

        &::after {
          content: " ";
          box-sizing: border-box;
          position: absolute;
          border: 1px solid rgba(255, 255, 255, 0.5);
          top: 33.33%;
          bottom: 33.33%;
          left: 0;
          right: 0;
          border-left: 0;
          border-right: 0;
        }
      }

      .roundShape {
        border-radius: 50%
      }

      .mask-border {
        path {
          transition:all 1s linear;
          animation-name:ring;
          animation-duration:9.2s;
          animation-timing-function: linear;
          animation-iteration-count:infinite;
        }

        @keyframes ring {
            from {
                stroke-dashoffset:0;
            }
            to {
                stroke-dashoffset:6000;
            }
        }
      }

      .mask-image {
        -webkit-mask-image: url(${e}#mask-setting-${this.props.widgetId});
        mask: url(${e}#mask-setting-${this.props.widgetId});
        mask-image: url(${e}#mask-setting-${this.props.widgetId});
      }
    `},this.preventZoomSafari=t=>t.preventDefault(),this.cleanEvents=()=>{document.removeEventListener("mousemove",this.onMouseMove),document.removeEventListener("mouseup",this.onDragStopped),document.removeEventListener("touchmove",this.onTouchMove),document.removeEventListener("touchend",this.onDragStopped)},this.onImgLoad=()=>{this.computeSizes(),this.emitCropData()},this.computeSizes=()=>{if(this.image){this.imageSize={width:this.image.width,height:this.image.height,naturalWidth:this.image.naturalWidth,naturalHeight:this.image.naturalHeight};const t=this.props.widgetArea.width,e=this.props.widgetArea.height;let o=this.state.minZoom,i=this.state.maxZoom;this.image.width/this.image.height>=t/e?(o=e/this.image.height,i=o+5):(o=t/this.image.width,i=o+5),o>this.props.zoom&&this.props.onZoomChange&&this.props.onZoomChange(o);const s={width:t,height:e};this.setState({cropSize:s,minZoom:o,maxZoom:i},this.recomputeCropPosition)}this.container&&(this.containerRect=this.container.getBoundingClientRect())},this.onMouseDown=t=>{t.preventDefault(),document.addEventListener("mousemove",this.onMouseMove),document.addEventListener("mouseup",this.onDragStopped),this.onDragStart(w.getMousePoint(t))},this.onMouseMove=t=>{this.onDrag(w.getMousePoint(t))},this.onTouchStart=t=>{t.preventDefault(),document.addEventListener("touchmove",this.onTouchMove,{passive:!1}),document.addEventListener("touchend",this.onDragStopped),2===t.touches.length?this.onPinchStart(t):1===t.touches.length&&this.onDragStart(w.getTouchPoint(t.touches[0]))},this.onTouchMove=t=>{2===t.touches.length?this.onPinchMove(t):1===t.touches.length&&this.onDrag(w.getTouchPoint(t.touches[0]))},this.onDragStart=({x:t,y:e})=>{this.dragStartPosition={x:t,y:e},this.dragStartCrop={x:this.props.crop.x,y:this.props.crop.y}},this.onDrag=({x:t,y:e})=>{this.rafDragTimeout&&window.cancelAnimationFrame(this.rafDragTimeout),this.rafDragTimeout=window.requestAnimationFrame((()=>{if(void 0===t||void 0===e)return;const o=t-this.dragStartPosition.x,i=e-this.dragStartPosition.y,s=l({x:this.dragStartCrop.x+o,y:this.dragStartCrop.y+i},this.imageSize,this.state.cropSize,this.props.zoom);this.props.onCropChange(s)}))},this.onDragStopped=()=>{this.cleanEvents(),this.emitCropData()},this.onWheel=t=>{t.preventDefault();const e=w.getMousePoint(t);let o=null;o=t.deltaY<=0?1.05*this.props.zoom:.95*this.props.zoom,this.setNewZoom(o,e)},this.getPointOnContainer=({x:t,y:e},o)=>{if(!this.containerRect)throw new Error("The Cropper is not mounted");return{x:this.containerRect.width/2-(t-this.containerRect.left),y:this.containerRect.height/2-(e-this.containerRect.top)}},this.getPointOnImage=({x:t,y:e})=>{const{crop:o,zoom:i}=this.props;return{x:(t+o.x)/i,y:(e+o.y)/i}},this.setNewZoom=(t,e)=>{const o=this.getPointOnContainer(e),i=this.getPointOnImage(o),s=Math.min(this.state.maxZoom,Math.max(t,this.state.minZoom)),r=l({x:i.x*s-o.x,y:i.y*s-o.y},this.imageSize,this.state.cropSize,s);this.props.onCropChange(r),this.props.onZoomChange&&this.props.onZoomChange(s)},this.emitCropData=()=>{if(!this.state.cropSize)return;const t=l(this.props.crop,this.imageSize,this.state.cropSize,this.props.zoom),{croppedAreaPercentages:e,croppedAreaPixels:o}=function(t,e,o,i){const s={x:u(100,((e.width-o.width/i)/2-t.x/i)/e.width*100),y:u(100,((e.height-o.height/i)/2-t.y/i)/e.height*100),width:u(100,o.width/e.width*100/i),height:u(100,o.height/e.height*100/i)};return{croppedAreaPercentages:s,croppedAreaPixels:{x:u(e.naturalWidth,s.x*e.naturalWidth/100),y:u(e.naturalHeight,s.y*e.naturalHeight/100),width:u(e.naturalWidth,s.width*e.naturalWidth/100),height:u(e.naturalHeight,s.height*e.naturalHeight/100)}}}(t,this.imageSize,this.state.cropSize,this.props.zoom);this.props.onCropComplete&&this.props.onCropComplete(e,o)},this.recomputeCropPosition=()=>{const t=l(this.props.crop,this.imageSize,this.state.cropSize,this.props.zoom);this.props.onCropChange(t),this.emitCropData()},this.onImgError=()=>{const t={width:this.props.widgetArea.width,height:this.props.widgetArea.height};this.setState({cropSize:t})},this.onResize=(t,e)=>{this.screenWidth=t,this.screenHeight=e},this.state={cropSize:null,minZoom:this.props.minZoom,maxZoom:this.props.maxZoom}}componentDidMount(){window.addEventListener("resize",this.computeSizes),this.container.addEventListener("gesturestart",this.preventZoomSafari),this.container.addEventListener("gesturechange",this.preventZoomSafari),this.container.addEventListener("wheel",this.onWheel)}componentWillUnmount(){window.removeEventListener("resize",this.computeSizes),this.container.removeEventListener("gesturestart",this.preventZoomSafari),this.container.removeEventListener("gesturechange",this.preventZoomSafari),this.container.removeEventListener("wheel",this.onWheel),this.cleanEvents()}componentDidUpdate(t){t.aspect!==this.props.aspect?this.computeSizes():t.zoom!==this.props.zoom&&this.recomputeCropPosition()}onPinchStart(t){const e=w.getTouchPoint(t.touches[0]),o=w.getTouchPoint(t.touches[1]);this.lastPinchDistance=d(e,o),this.onDragStart(f(e,o))}onPinchMove(t){const e=w.getTouchPoint(t.touches[0]),o=w.getTouchPoint(t.touches[1]),i=f(e,o);this.onDrag(i),this.rafZoomTimeout&&window.cancelAnimationFrame(this.rafZoomTimeout),this.rafZoomTimeout=window.requestAnimationFrame((()=>{const t=d(e,o),s=this.props.zoom*(t/this.lastPinchDistance);this.setNewZoom(s,i),this.lastPinchDistance=t}))}render(){const e=(0,t.getAppStore)().getState().appContext.isRTL,{crop:{x:o,y:i},zoom:s,showGrid:r,style:{},classes:{containerClassName:n,cropAreaClassName:a,imageClassName:h}}=this.props;return(0,t.jsx)("div",{css:this.getStyle,onMouseDown:this.onMouseDown,onTouchStart:this.onTouchStart,"data-testid":"container",className:n,style:{userSelect:"none",touchAction:"none",cursor:"move",display:"flex",justifyContent:"center",alignItems:"center",position:"absolute",top:this.props.widgetArea.top,left:e?null:this.props.widgetArea.left,right:e?document.body.clientWidth-this.props.widgetArea.right:null,width:this.props.widgetArea.width,height:this.props.widgetArea.height},ref:t=>{this.container=t}},(0,t.jsx)(t.ReactResizeDetector,{handleWidth:!0,handleHeight:!0,onResize:this.onResize}),(0,t.jsx)("img",{src:this.props.image,ref:t=>{this.image=t},onLoad:this.onImgLoad,onError:this.onImgError,alt:"",style:{position:"absolute",transform:`translate(${o}px, ${i}px) scale(${s})`,willChange:"transform"},className:h}),this.state.cropSize&&(0,t.jsx)(p,{onCancelCrop:this.props.onCancelCrop,onConfirmCrop:this.props.onConfirmCrop,showGrid:r,style:{width:this.state.cropSize.width,height:this.state.cropSize.height},className:a,svgViewBox:this.props.svgViewBox,svgPath:this.props.svgPath,cropShape:this.props.cropShape,widgetId:this.props.widgetId,screenWidth:this.screenWidth,screenHeight:this.screenHeight,widgetArea:this.props.widgetArea}),this.props.loading&&(0,t.jsx)("div",{style:{position:"absolute",left:"50%",top:"50%"},className:"jimu-secondary-loading"}))}}w.defaultProps={zoom:1,aspect:4/3,maxZoom:10,minZoom:1,showGrid:!0,style:{},classes:{},zoomSpeed:1},w.getMousePoint=t=>({x:Number(t.clientX),y:Number(t.clientY)}),w.getTouchPoint=t=>({x:Number(t.clientX),y:Number(t.clientY)});var x=r(30726);const v=["image/gif","image/svg+xml"];class y extends t.React.Component{constructor(e){super(e),this.eidtInfoStyle={width:"100%",height:"100%",margin:0},this.onCropChange=t=>{this.setState({crop:t})},this.onCropAreaComplete=(t,e)=>{this.setState({croppedAreaPixels:e})},this.onZoomChange=t=>{this.setState({zoom:t})},this.onConfirmCrop=(e,o,i)=>{if(v.includes(this.props.imageFormat)||this.props.cropType===x.CropType.Fake){const t={cropPosition:this.state.crop,cropZoom:this.state.zoom,svgViewBox:e||"0 0 28 28",svgPath:o||"m0,0l0,28l28,0l0,-28l-28,0z",cropShape:i||"rectangle",cropPixel:this.state.croppedAreaPixels,cropType:x.CropType.Fake};this.props.onConfirmCrop&&this.props.onConfirmCrop(t)}else{const s={cropPosition:this.state.crop,cropZoom:this.state.zoom,svgViewBox:e,svgPath:o,cropShape:i,cropPixel:this.state.croppedAreaPixels,cropType:x.CropType.Real};this.setState({loading:!0}),function(e,o,i){return m(this,void 0,void 0,(function*(){return yield new Promise((function(s,r){HTMLCanvasElement.prototype.toBlob||Object.defineProperty(HTMLCanvasElement.prototype,"toBlob",{value:function(t,e,o){const i=this;setTimeout((function(){const s=atob(i.toDataURL(e,o).split(",")[1]),r=s.length,n=new Uint8Array(r);for(let t=0;t<r;t++)n[t]=s.charCodeAt(t);t(new Blob([n],{type:e||"image/png"}))}))}});const n=new Image;n.setAttribute("crossOrigin","anonymous"),n.src=e,n.addEventListener("load",(()=>{const e=document.createElement("canvas");e.width=o.width,e.height=o.height,e.getContext("2d").drawImage(n,o.x,o.y,o.width,o.height,0,0,o.width,o.height),e.toBlob((function(e){const o=URL.createObjectURL(e),r={file:o,fileName:(new Date).getTime().toString()+".jpeg",type:t.ResourceType.Image,url:o,blobUrl:o,referedIds:[],fileFormat:"image/jpeg",originId:i};if(window.jimuConfig.isBuilder){const t=c.AppResourceManager.getInstance();c.AppResourceManager.getBlobByBlobUrl(r.file).then((e=>m(this,void 0,void 0,(function*(){r.file=e,t.upLoadAppResource(r),r.originId&&c.AppResourceManager.getInstance().updateImageResourceItemInfo(r)})))),s(r)}else t.moduleLoader.getJimuForBuilderModules().appBuilderSync.letBuilderAddResource(r),s(r)}),"image/jpeg",.8)})),n.addEventListener("error",(()=>{r()}))}))}))}(this.props.image,s.cropPixel,this.props.originId).then((t=>{this.setState({loading:!1}),this.props.onConfirmCrop&&this.props.onConfirmCrop(s,t)}),(()=>{this.setState({loading:!1})}))}},this.state={modal:!0,crop:this.props.crop?this.props.crop:{x:0,y:0},zoom:this.props.cropZoom?this.props.cropZoom:1,aspect:1,showGrid:!1,zoomSpeed:.1,croppedAreaPixels:null,loading:!1}}render(){const e=window.jimuConfig.isBuilder;return t.ReactDOM.createPortal((0,t.jsx)("div",null,(0,t.jsx)("div",{className:"jimu-widget",style:{zIndex:9999,position:"fixed",top:0,left:0,backgroundColor:"rgb(0, 0, 0, .5)"}}),(0,t.jsx)("div",{style:{zIndex:1e4,position:"absolute",top:0},className:(0,t.classNames)({"jimu-widget d-flex justify-content-center align-items-center":e})},(0,t.jsx)(w,{image:this.props.image,crop:this.state.crop,zoom:this.state.zoom,aspect:this.state.aspect,showGrid:this.state.showGrid,zoomSpeed:this.state.zoomSpeed,onCropChange:this.onCropChange,onCropComplete:this.onCropAreaComplete,onZoomChange:this.onZoomChange,onCancelCrop:this.props.onCancelCrop,onConfirmCrop:this.onConfirmCrop,widgetArea:this.props.widgetArea,widgetId:this.props.widgetId,svgViewBox:this.props.cropParam&&this.props.cropParam.svgViewBox,svgPath:this.props.cropParam&&this.props.cropParam.svgPath,cropShape:this.props.cropParam&&this.props.cropParam.cropShape,loading:this.state.loading}))),document&&document.getElementsByTagName("body")[0])}}})(),n})())}}}));