"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-f0ca08"],{88996:(t,e,i)=>{i.r(e),i.d(e,{arcgis_raster_processing_template:()=>l});var n,s=i(35110),r=i(21104),a=i(1984);i(73838),i(63280),i(86587),function(t){t[t.Idle=0]="Idle",t[t.Pending=1]="Pending",t[t.Resolved=2]="Resolved",t[t.Rejected=3]="Rejected"}(n||(n={}));const o={status:n.Idle,data:null,error:null},l=class{constructor(t){(0,s.r)(this,t),this.arcgisRasterProcessingTemplateClose=(0,s.c)(this,"arcgisRasterProcessingTemplateClose",7),this.originalRasterFunction=null,this.rasterFunctionInfos=[],this.dataURLRegex=/^\s*data:([a-z]+\/[a-z]+(;[a-z\-]+\=[a-z\-]+)?)?(;base64)?,[a-z0-9\!\$\&\'\,\(\)\*\+\,\;\=\-\.\_\~\:\@\/\?\%\s]*\s*$/i,this.handleImportTemplate=()=>{this.updateShowItemBrowser(!0)},this.handleCustomRFTAdd=t=>{this.fetchRFTItem(t)},this.handleDone=()=>{this.arcgisRasterProcessingTemplateClose.emit("save")},this.handleCancel=()=>{var t;this.layer.rasterFunction=this.originalRasterFunction,this.activeRasterFunctionName=null===(t=this.originalRasterFunction)||void 0===t?void 0:t.functionName,this.arcgisRasterProcessingTemplateClose.emit("cancel")},this.updateActiveRasterFunctionName=t=>{this.activeRasterFunctionName=t},this.updateLayerRasterFunction=t=>{var e,i;const{layer:n,customRasterFunction:s}=this;let r={functionName:t};if(t===(null==s?void 0:s.name)&&(r=null==s?void 0:s.function),"imagery-tile"===n.type)n.rasterFunction="none"===(null==t?void 0:t.toLowerCase())?null:r;else if(n.rasterFunction=r,(null===(e=null==n?void 0:n.mosaicRule)||void 0===e?void 0:e.multidimensionalDefinition)&&(null===(i=n.mosaicRule.multidimensionalDefinition[0])||void 0===i?void 0:i.variableName)!==t){const t=n.mosaicRule.multidimensionalDefinition.map((t=>(t.variableName="",t)));n.mosaicRule.multidimensionalDefinition=t}this.activeRasterFunctionName=t,n.renderer=null,n.bandIds=null,n.multidimensionalSubset=null},this.updateShowItemBrowser=t=>{this.showRFTItemBrowser=t},this.fetchRFTItem=async t=>{if(this.updateRFTItemApiData({status:n.Pending,data:null,error:null}),null==t?void 0:t.id){try{const e=new this.PortalItem({id:t.id,portal:this.portal});let i;const s=null==t?void 0:t.name,r=null==s?void 0:s.slice(-8);i=".rft.xml"===(null==r?void 0:r.toLowerCase())?await this.convertRFTFormat(t.id,"json"):await e.fetchData("json");const a=this.RasterFunction.fromJSON({rasterFunctionDefinition:i});await this.validateRFT(a),this.updateRFTItemApiData({status:n.Resolved,data:a,error:null}),this.updateCustomRasterFunction(a)}catch(t){this.updateRFTItemApiData({status:n.Rejected,data:null,error:t.message})}this.updateShowItemBrowser(!1)}else this.updateRFTItemApiData({status:n.Rejected,data:null,error:this.strings.errorRetrievingRFTItem})},this.validateRFT=async t=>{var e,i;try{const{layer:i,esriRequest:n,strings:s}=this,r=t.toJSON();if(!("imagery-tile"===i.type?await n(i.url,{query:{f:"json",renderingRule:JSON.stringify(null!==(e=null==r?void 0:r.rasterFunctionDefinition)&&void 0!==e?e:r)}}):await i.generateRasterInfo(t)))throw new Error(s.rftValidationFailed)}catch(t){const{strings:{rftValidationFailed:e,unsupportedFunction:n}}=this,s=null===(i=t.message)||void 0===i?void 0:i.toLowerCase().indexOf("unsupported raster function:");let r=e;throw s>-1&&(r=`${e} ${n.replace("${rasterFunction}",t.message.slice(s+28).trim())}`),new Error(r)}},this.convertRFTFormat=async(t,e)=>{const i=this.portal.helperServices.rasterUtilities;if(!i)throw new Error(this.strings.rasterutilitySeverMissing);const n=`${i.url}/ConvertRasterFunctionTemplate`,s={inputRasterFunction:JSON.stringify({itemId:t}),format:e},r=await this.geoprocessor.submitJob(n,s);await r.waitForJobCompletion({interval:1500});const a=await r.fetchResultData("outputRasterFunction"),o=null==a?void 0:a.value;if(!o)throw new Error(this.strings.unsupportedFunction);return(await this.esriRequest(o)).data},this.createCustomRasterFunction=t=>{var e;const{strings:{custom:i},layer:n}=this,s=null!==(e=null==t?void 0:t.rasterFunctionDefinition)&&void 0!==e?e:t,{functionName:r}=t,{description:a,thumbnailEx:o,help:l}=s,c={name:`${i}- ${r}`,function:t,description:a,thumbnail:o,help:l,functionType:0};if(!o&&!this.dataURLRegex.test(o))if("imagery-tile"===n.type)c.thumbnail=`${this.portal.staticImagesUrl}/rasterfunctiontemplate.png`;else{const t=this.getExportImageBaseURL(),e=`renderingRule=${encodeURIComponent(JSON.stringify(s))}`;c.thumbnail=`${t}&${e}`}return c},this.getRasterFunctionInfos=()=>{const{type:t}=this.layer;return"imagery-tile"===t?[{name:"None",description:this.strings.noneRasterFunctionDescription,help:"",functionType:0,thumbnail:`${this.portal.staticImagesUrl}/rasterfunctiontemplate.png`}]:this.fixImageryRasterFunctionsThumbnail(this.layer.rasterFunctionInfos)},this.fixImageryRasterFunctionsThumbnail=t=>{const{dataURLRegex:e,layer:i,strings:n}=this;if("imagery"!==i.type)return t;const s=this.getExportImageBaseURL();return t.map((t=>{var r;const a="none"===t.name.toLowerCase(),o=(l=s,c=t.name,`${l}&renderingRule=${encodeURIComponent(`{"rasterFunction":"${c}" }`)}`);var l,c;if(a){const e=n.noneRasterFunctionDescription;let s=o;const r=i.bandIds;(null==r?void 0:r.length)>=3&&(s=`${o}+&bandIds=${r[0]},${r[1]},${r[2]}`);const a=s;return Object.assign(Object.assign({},t),{description:e,thumbnail:a})}const u=null!==(r=t.description)&&void 0!==r?r:"";let h=t.thumbnail;return t.thumbnail&&e.test(t.thumbnail)||(h=o),Object.assign(Object.assign({},t),{description:u,thumbnail:h})}))},this.getExportImageBaseURL=()=>{var t;const{layer:e,IdentityManager:i}=this;if(null===e||null===e.fullExtent)return;const n=e.fullExtent.clone(),s=e.fullExtent.width,r=e.fullExtent.height;if(s/r>=2||r/s>=2){const t=Math.min(s,r)/2,i=e.fullExtent.center;n.xmin=i.x-t,n.ymin=i.y-t,n.xmax=i.x+t,n.ymax=i.y+t}const a=n.xmin+","+n.ymin+","+n.xmax+","+n.ymax,o=i.findCredential(e.url),l=null==o?void 0:o.token,c=new URLSearchParams(Object.assign(Object.assign({bbox:a,token:l,imageSize:"400,400"},e.customParameters),{f:"image"}));l||c.delete("token");const u=e.sourceJSON;return 2===u.bandCount&&(null===(t=u.serviceDataType)||void 0===t?void 0:t.includes("Vector"))&&c.append("renderingRule",JSON.stringify({rasterFunction:"VectorFieldRenderer",rasterFunctionArguments:{MagnitudeBandID:0,DirectionBandID:1,IsUVComponents:"esriImageServiceDataTypeVector-UV"===u.serviceDataType,ReferenceSystem:1,MassFlowAngleRepresentation:0,SymbolTileSize:30,SymbolTileSizeUnits:100,CalculationMethod:"Vector Average",SymbologyName:"Single Arrow",MinimumMagnitude:1,MaximumMagnitude:-1,MinimumSymbolSize:40,MaximumSymbolSize:80},outputPixelType:"U8",variableName:"Raster"})),`${e.url}/exportImage?${c.toString()}`},this.layer=void 0,this.portal=void 0,this.dismissible=!1,this.showRendererWarning=!1,this.activeRasterFunctionName=null,this.customRasterFunction=null,this.showRFTItemBrowser=!1,this.items=void 0,this.pagination=void 0,this.rftItemData=o}async componentWillLoad(){const[t,e,i,n,s]=await(0,r.l)(["esri/identity/IdentityManager","esri/portal/PortalItem","esri/layers/support/RasterFunction","esri/rest/geoprocessor","esri/request"]);this.IdentityManager=t,this.PortalItem=e,this.RasterFunction=i,this.geoprocessor=n,this.esriRequest=s;const[o]=await(0,a.g)(this.hostElement);this.strings=o,await this.init()}render(){return(0,s.h)(s.H,{class:"calcite-match-height"},(0,s.h)("calcite-flow",null,this.showRFTItemBrowser?this.renderRFTBrowsePanel():this.renderTemplatePanel()))}renderRFTBrowsePanel(){const{layer:t,rftItemData:e,strings:i}=this,r=e.status===n.Pending;return(0,s.h)("calcite-flow-item",{heading:i.chooseRasterFunctionTemplate,loading:!t},this.renderBack(),r&&this.renderRFTItemLoader(),this.renderRFTItemBrowser())}renderRFTItemBrowser(){const{portal:t,strings:e,pagination:i}=this,n=`${function(t){const{customBaseUrl:e,portalHostname:i,urlKey:n}=t,{protocol:s}=window.location;return`${s}//${n?`${n}.${e}`:i}`}(t)}/home/`;return(0,s.h)("arcgis-item-browser",{api:4,portal:t,config:{baseUrl:n},q:'type:"Raster function template"',user:t.user,view:"list",onArcgisItemBrowserUpdate:t=>{const{results:e,num:i,start:n,total:s}=t.detail;this.items=e,this.pagination={start:n,num:i,total:s}},onArcgisItemBrowserLoading:()=>this.items=[]},(0,s.h)("arcgis-item-browser-top-bar",{slot:"top-bar"},(0,s.h)("arcgis-item-browser-bucket-select",{slot:"bucket"}),(0,s.h)("arcgis-item-browser-search",{slot:"search",placeholder:e.itemBrowserPlaceholder,term:""})),(0,s.h)("arcgis-item-browser-sort",{slot:"sort"}),(0,s.h)("arcgis-item-browser-filters",{slot:"filters"},(0,s.h)("arcgis-item-browser-filter-extent",null),(0,s.h)("arcgis-item-browser-filter-folder",null),(0,s.h)("arcgis-item-browser-filter-categories",null),(0,s.h)("arcgis-item-browser-filter-date",{property:"modified"}),(0,s.h)("arcgis-item-browser-filter-date",{property:"created"}),(0,s.h)("arcgis-item-browser-filter-tags",null),(0,s.h)("arcgis-item-browser-filter-sharing",null),(0,s.h)("arcgis-item-browser-filter-content-status",null)),(0,s.h)("arcgis-item-browser-content",{slot:"content"},(this.items||[]).map((e=>(0,s.h)("arcgis-item-browser-card",{key:e.id,baseUrl:n,item:e,portal:t,preview:"top",showDateUpdated:!0,showItemType:!1,showOwner:!0,showThumbnail:!0,user:t.user},(0,s.h)("calcite-button",{slot:"actions-end",appearance:"transparent",iconStart:"plus-circle",kind:"neutral",scale:"s",onClick:()=>this.handleCustomRFTAdd(e)}))))),(0,s.h)("arcgis-item-browser-pagination",{slot:"pagination",total:null==i?void 0:i.total,start:null==i?void 0:i.start,num:null==i?void 0:i.num}))}renderRFTItemLoader(){return(0,s.h)("div",{class:"rft-item-loader"},(0,s.h)("calcite-loader",{inline:!0,label:"rftItemLoader",type:"indeterminate"}),(0,s.h)("div",{class:"loader-text"},this.strings.rftItemLoaderText))}renderTemplatePanel(){const{layer:t,rftItemData:e,strings:i,showRendererWarning:r,dismissible:a}=this,o="imagery-tile"===t.type,l=e.status===n.Rejected;return(0,s.h)("calcite-flow-item",{loading:!t,heading:i.processingTemplates},a&&this.renderClose(),o&&this.renderBetaNotice(),r&&this.renderWarningNotice(),this.renderImportTemplateButton(),l&&this.renderValidationError(e.error),this.renderServerRasterFunctionsInfo(),this.renderFooterActions())}renderBetaNotice(){return(0,s.h)("div",{class:"beta-notice"},(0,s.h)("calcite-notice",{closable:!0,icon:!0,open:!0,scale:"s"},(0,s.h)("div",{slot:"message"},this.strings.betaNotice)))}renderWarningNotice(){return(0,s.h)("div",{class:"warning-notice"},(0,s.h)("calcite-notice",{closable:!0,icon:!0,kind:"warning",open:!0,scale:"s"},(0,s.h)("div",{slot:"message"},this.strings.warningNotice)))}renderImportTemplateButton(){return(0,s.h)("calcite-button",{appearance:"transparent","icon-start":"plus",onClick:this.handleImportTemplate},this.strings.importUserTemplate)}renderValidationError(t){return(0,s.h)("calcite-alert",{kind:"danger",label:t,open:!0},(0,s.h)("div",{slot:"title"},this.strings.validationErrorTitle),(0,s.h)("div",{slot:"message"},t))}renderServerRasterFunctionsInfo(){const{customRasterFunction:t,rasterFunctionInfos:e,strings:i}=this;return 0===(null==e?void 0:e.length)?(0,s.h)("calcite-list",null,(0,s.h)("calcite-list-item",{description:i.noRasterFunctions})):(0,s.h)("calcite-list",{selectionMode:"single-persist"},t?this.renderRasterFunctionInfo(t,e.length):null,e.map(((t,e)=>this.renderRasterFunctionInfo(t,e))))}renderRasterFunctionInfo(t,e){var i,n;const{name:r,description:a,thumbnail:o}=t,l=(null==a?void 0:a.length)>100,c=l,u=l?`${a.slice(0,100)}...`:a,h=`${r}_raster_function_info_${e}`;return(0,s.h)("div",{key:e},c&&(0,s.h)("calcite-tooltip",{"reference-element":h},a),(0,s.h)("calcite-list-item",{id:h,description:u,label:r,value:r,key:r,selected:r===(null!==(i=this.activeRasterFunctionName)&&void 0!==i?i:null===(n=this.rasterFunctionInfos[0])||void 0===n?void 0:n.name),onCalciteListItemSelect:()=>this.updateLayerRasterFunction(r)},(0,s.h)("calcite-action",{slot:"actions-start",compact:!0,scale:"s",text:r,onClick:()=>this.updateLayerRasterFunction(r)},(0,s.h)("img",{src:o,class:"raster-function-thumbnail"}))))}renderBack(){const t="raster-processing-template-back-action";return(0,s.h)("calcite-action",{id:t,text:this.strings.back,scale:"s",slot:"header-actions-start",onClick:()=>this.updateShowItemBrowser(!1)},(0,s.h)("calcite-icon",{scale:"s",icon:"chevron-left"}),(0,s.h)("calcite-tooltip",{"reference-element":t,slot:"tooltip"},this.strings.back))}renderClose(){return(0,s.h)("calcite-action",{text:this.strings.close,scale:"s",slot:"header-actions-end",onClick:this.handleCancel},(0,s.h)("calcite-icon",{scale:"m",icon:"x"}))}renderFooterActions(){return(0,s.h)(s.F,null,this.renderDoneButton(),this.renderCancelButton())}renderDoneButton(){return(0,s.h)("calcite-button",{slot:"footer",color:"blue",width:"half",onClick:this.handleDone},this.strings.done)}renderCancelButton(){return(0,s.h)("calcite-button",{slot:"footer",appearance:"outline-fill",width:"half",onClick:this.handleCancel},this.strings.cancel)}async init(){var t,e;await this.layer.load(),this.originalRasterFunction=this.layer.rasterFunction;const i=null!==(e=null===(t=this.originalRasterFunction)||void 0===t?void 0:t.functionName)&&void 0!==e?e:null;this.updateActiveRasterFunctionName(i),this.rasterFunctionInfos=this.getRasterFunctionInfos(),this.activeRasterFunctionName&&!this.rasterFunctionInfos.some((({name:t})=>t===this.activeRasterFunctionName))&&(this.customRasterFunction=this.createCustomRasterFunction(this.originalRasterFunction))}updateCustomRasterFunction(t){var e;const i=this.createCustomRasterFunction(t);(null===(e=this.customRasterFunction)||void 0===e?void 0:e.name)!==i.name&&(this.customRasterFunction=i,this.updateActiveRasterFunctionName(i.name),this.updateLayerRasterFunction(i.name))}updateRFTItemApiData(t){this.rftItemData=t}get hostElement(){return(0,s.d)(this)}};l.style=":host{display:flex;height:100%}.beta-notice,.warning-notice{max-width:100%;text-align:center;padding:var(--arcgis-app-cap-spacing-half) var(--arcgis-app-side-spacing-half)}.raster-function-thumbnail{height:100px;width:100px;padding:0 8px}.rft-item-loader{display:inline-flex;align-items:center;justify-content:center;width:100%}.loader-text{margin:0 --arcgis-app-side-spacing}"}}]);