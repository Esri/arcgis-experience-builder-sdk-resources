"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_ba-infographic_node_modules_arcgis_business-analyst-components_dis-7014c2"],{62770:(e,t,r)=>{r.d(t,{E:()=>o,G:()=>h,S:()=>l,T:()=>s});var a=r(41520);class s{static getToken(){return new Promise((e=>{e(s.token.access_token)}))}static setToken(e,t){e&&e.length>0&&t&&t.length>0&&(this.token.access_token=t,this.token.username=e)}}s.token={access_token:"",expires_in:null,persist:"true",ssl:"true",username:"mark_ba"};class o{static setEnvironment(e){let t="prod"===e||"localhost"===e?"www":e;o._env=t}static getEnvironment(){return o._env}static setPortalUrl(e){o.portalUrl=e}static setGeoenrichmentUrl(e){o.geoenrichmentUrl=e}static setGeocodeUrl(e){o.geocodeUrl=e}static getPortalBase(){if(o.portalUrl)return o.portalUrl;const e=o._env;return e?"https://"+("dev"===e?"devext":"qa"===e?"qaext":"www")+".arcgis.com":""}static getUrl(e){if(!o._env)return console.log("Environments error: env not set"),"";if(!e||!a.U.hasText(e))return console.log("Environments error: invalid subdomain"),"";const t=o.getPortalBase();if(""===t)return"";try{let r="";switch(e){case"geocode":if(o.geocodeUrl){r=o.geocodeUrl;break}r="qa"===o._env?"https://geocodeqa.arcgis.com/arcgis/rest/services/World/GeocodeServer":"dev"===o._env?"https://geocodedev.arcgis.com/arcgis/rest/services/World/GeocodeServer":"https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer";break;case"arcgis":r=t;break;case"infographics":r="qa"===o._env?"https://baoqa.arcgis.com/InfographicsPlayer/BAMobile/23.R03/reportPlayer/ReportPlayerMobile.html":"dev"===o._env?"https://baodev.arcgis.com/InfographicsPlayer/BAMobile/23.R03/reportPlayer/ReportPlayerMobile.html":"https://bao.arcgis.com/InfographicsPlayer/BAMobile/23.R03/reportPlayer/ReportPlayerMobile.html";break;case"geoenrich":if(o.geoenrichmentUrl){r=o.geoenrichmentUrl;break}r="qa"===o._env?"https://geoenrichqa.arcgis.com/arcgis/rest/services/World/geoenrichmentserver":"dev"===o._env?"https://geoenrichdev.arcgis.com/arcgis/rest/services/World/geoenrichmentserver":"https://geoenrich.arcgis.com/arcgis/rest/services/World/geoenrichmentserver"}return r}catch(e){a.a.Error("Environments.getUrl() error ",e)}return""}static isOnlineGeocoder(e){return!!(e.toLowerCase().startsWith("https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer".toLowerCase())||e.toLowerCase().startsWith("https://geocodeqa.arcgis.com/arcgis/rest/services/World/GeocodeServer".toLowerCase())||e.toLowerCase().startsWith("https://geocodedev.arcgis.com/arcgis/rest/services/World/GeocodeServer".toLowerCase()))}static isAGOPortal(e){return!!(e.toLowerCase().startsWith("https://www.arcgis.com".toLowerCase())||e.toLowerCase().startsWith("https://qaext.arcgis.com".toLowerCase())||e.toLowerCase().startsWith("https://devext.arcgis.com".toLowerCase()))}}o._env="www",o.portalUrl="",o.geoenrichmentUrl="",o.geocodeUrl="";class i{static executeSelf(){return new Promise(((e,t)=>{s.getToken().then((r=>{if(r===i._lastSelfToken)e(i._selfResult);else{let a={taskPath:"/portals/self",data:{culture:"en-us"}};i.executeRequest(a).then((t=>{i._lastSelfToken=r,i._selfResult=t,e(t)})).catch((e=>{i._lastSelfToken="",i._selfResult="",t(e)}))}})).catch((e=>t(e)))}))}static getGeoenrichmentUrl(){return o.getUrl("geoenrich")}static getHelperServiceUrl(e){return new Promise(((t,r)=>{i.executeSelf().then((function(a){let s=a.helperServices;if(s){let a=s[e];if(a){let s=Array.isArray(a)?a[0].url:a.url;s?t(s):r(e+" helper service is not configured.")}else r(e+" helper service is not configured.")}else r("Helper services are not configured.")})).catch((e=>r(e)))}))}static getPortalResource(e){return i.executeRequest({taskPath:"/portals/self/resources/"+e})}static getItemData(e){return i.executeRequest({taskPath:"/content/items/"+e+"/data"})}static searchAllItems(e,t){return new Promise(((r,a)=>{let s=[],o=this,i=function(e,t,n){o.searchItems(e,t,n).then((function(a){a.items.length&&(s=s.concat(a.items));let o=a.context;o.nextStart>0?i(e,t,o):r(s)}),(function(e){s&&s.length?r(s):a(e)}))};i(e,t,null)}))}static searchItems(e,t,r){return new Promise(((a,s)=>{let o=t?JSON.parse(JSON.stringify(t)):{};if(r){o.q=t.q;let e=r.total,s=r.nextStart;e&&s&&(s>0&&e>=s?o.start=s:a({items:[],context:r})),r.sortField&&r.sortOrder&&(o.sortOrder=r.sortOrder,o.sortField=r.sortField)}else{let t=[];Object.getOwnPropertyNames(e).forEach((function(r){t.push(r+':"'+e[r]+'"')})),t.length&&(o.q=t.join(" AND "))}i.portalSearch(o).then((e=>{let t=e.results,r={query:e.query,total:e.total,nextStart:e.nextStart,sortOrder:null,sortField:null};o.sortOrder&&o.sortField&&(r.sortOrder=o.sortOrder,r.sortField=o.sortField),a({items:t,context:r})})).catch(s)}))}static portalSearch(e){return i.executeRequest({taskPath:"/search",data:e})}static async getPortalUrl(){return o.getUrl("arcgis")+"/sharing/rest"}static executeRequest(e){return new Promise(((t,r)=>{s.getToken().then((async a=>{e.data||(e.data={}),e.data.f||(e.data.f="json"),e.data.token=a||e.data.token,e.data.token||delete e.data.token,e.data.langCode=e.data?.langCode?e.data.langCode:"en-us";const s=new FormData;for(let t in e.data)s.append(t,e.data[t]);let o;o=Object.prototype.hasOwnProperty.call(e,"url")?e.url:await i.getPortalUrl(),e.taskPath&&(o+=e.taskPath);let n={};if(e.isStandardGeoQuery){const t=new Headers;t.append("Content-Type","application/x-www-form-urlencoded; charset=UTF-8");let r="",a=!0;for(const t in e.data)r+=a?"":"&",r+=t+"="+encodeURI(e.data[t]),a=!1;n={method:"POST",body:r,headers:t}}else n={method:"POST",body:s};fetch(o,n).then((t=>{if(!t.ok)throw new Error("Network response ended with error.");return"bin"===e.data.f?t.blob():t.json()})).then((e=>{e.error?r(e.error):t(e)})).catch((e=>{console.error("Error:",e),r(e)}))})).catch((e=>r(e)))}))}}class n{static getBusinessAnalystOrganizationalSettings(){return i.getPortalResource("BusinessAnalyst_Organizational_Settings.json")}static getDisabledReports(){return new Promise((e=>{let t=t=>{e({}),console.log("WebAppSettings error",t)};i.executeSelf().then((r=>{let a=r.user.roleId||r.user.role;n.getBusinessAnalystOrganizationalSettings().then((t=>{let r=t["userRoles.disabledAreas.reports"];r&&r[a]?e(r[a]):e({})})).catch(t)})).catch(t)}))}static getUserGalleryInfographicReportIds(){return new Promise(((e,t)=>{n._searchGalleryInfographicPreferencesItem().then((r=>{if(!r)return void t(null);let a=r.id;i.getItemData(a).then((t=>{e(t&&t.data&&t.data.myGalleryInfographicReportIds)})).catch((e=>t(e)))})).catch((e=>t(e)))}))}static _searchGalleryInfographicPreferencesItem(){return n._searchUserItem("esriFavoriteReportTemplates")}static _searchUserItem(e){return new Promise(((t,r)=>{i.executeSelf().then((a=>{let s=a.user.username,o={type:"Web Mapping Application",typekeywords:e,owner:s};i.searchItems(o,{num:1},void 0).then((e=>{t(e&&e.length&&e[0])})).catch((e=>r(e)))})).catch((e=>r(e)))}))}}class l{static getEnvironment(){return new Promise((e=>{e(o.getEnvironment())}))}static setEnvironment(e){e&&e.length>0?o.setEnvironment(e):console.log("ba-reports error: setEnvironment() invalid arg")}static async getPortalBaseUrl(){return o.getUrl("arcgis")}static isTrueString(e){return"true"===String(e).toLowerCase()}}class c{static _condenseResultsArray(e){const t=e.map((e=>({id:e.id,title:e.title,date:e.modified}))),r=t.map((e=>e.title));return t.filter(((e,t)=>r.indexOf(e.title)==t))}static _condenseResultsArrayGEInfographics(e){let t,r,a;const s=e.map((e=>{try{e.metadata.lastRevisionDate&&(a=e.metadata.lastRevisionDate),e.metadata.creationDate&&(r=e.metadata.creationDate),r&&(t=a&&a>r?a:r)}catch(e){console.log("ReportTemplatesManager error",e)}return{id:e.itemID,title:e.metadata.title,date:t}})),o=s.map((e=>e.title));return s.filter(((e,t)=>o.indexOf(e.title)==t))}static getReportTemplates(e,t=!1){return new Promise(((r,a)=>{let s={ge:void 0,shared:void 0,user:void 0,favoriteIds:void 0};i.executeSelf().then((o=>{let i=o.user.username;Promise.allSettled([c._getSharedCustomReportTemplateItems(i),c._getMyCustomReportTemplateItems(i),c._getFavoriteReportsIds(i,e)]).then((o=>{s.ge=o[0].value?o[0].value:[],s.shared=c._createReportTemplateInfos(o[1]&&o[1].value?o[1].value:[],e),s.user=c._createReportTemplateInfos(o[2]&&o[2].value?o[2].value:[],e),s.favoriteIds=o[3]&&o[3].value?o[3].value:[],n.getDisabledReports().then((e=>{let a=s.ge,o=s.shared;null!=a&&(s.ge=a.filter((t=>!e[t.reportID])),null!=o&&(s.shared=o.filter((t=>!e[t.reportID.itemid])))),t||(s.ge=c._condenseResultsArray(s.ge),s.shared=c._condenseResultsArray(s.shared),s.user=c._condenseResultsArray(s.user),s.favoriteIds=c._condenseResultsArray(s.favoriteIds)),r(s)})).catch((e=>a(e)))}))})).catch((e=>a(e)))}))}static _getGEReportTemplates(e){return new Promise(((t,r)=>{let a=c._geReportTemplatesCache[e];a?t(a):h.execute({taskPath:"/GeoEnrichment/Reports/"+e}).then((r=>{let a=r.reports;c._geReportTemplatesCache[e]=a,t(a)})).catch(r)}))}static _getSharedCustomReportTemplateItems(e){let t='type:"Report Template" (access:shared OR access:org) typekeywords:(esriWebReport NOT esriWebInfographicReport) NOT owner:'+e;return c._searchItems(t,c._removeInfographicTemplates)}static _getMyCustomReportTemplateItems(e){let t='type:"Report Template" typekeywords:(esriWebReport NOT esriWebInfographicReport) owner:'+e;return c._searchItems(t,c._removeInfographicTemplates)}static _removeInfographicTemplates(e){return!l.isTrueString(e.properties.isGraphicReport)}static getInfographicReportTemplateItems(e,t=!1,r,a){return new Promise((async(s,o)=>{let l={public:void 0,shared:void 0,user:void 0,favoriteIds:void 0,gallery:void 0},u=await h.getGEDefaultHierarchy(e,r);a&&(u=a),i.executeSelf().then((r=>{let a=r.user.username,i=r.user.orgId;Promise.allSettled([c._getEsriInfographicReportTemplateItems(e,u),c._getSharedInfographicReportTemplateItems(a,i),c._getUserInfographicReportTemplateItems(a),c._getFavoriteReportsIds(a,e),c._getGalleryInfographicReportTemplateItems()]).then((r=>{let a=c._byCountryAndDefaultHiearchy(e,u);l.public=r[0].value?r[0].value.filter(a):[],l.shared=r[1].value?r[1].value.filter(a):[],l.user=r[2].value?r[2].value.filter(a):[],l.favoriteIds=r[3].value?r[3].value:[],l.gallery=r[4].value?r[4].value.filter(a):[];let i=l.user;null!=i&&i.sort((function(e,t){return e.title.localeCompare(t.title)})),n.getDisabledReports().then((e=>{let r=function(t){return!e[t.id]},a=l.public;null!=a&&(l.public=a.filter(r));let o=l.shared;null!=o&&(l.shared=o.filter(r));let i=l.gallery;null!=i&&(l.gallery=i.filter(r)),t||(l.public=c._condenseResultsArrayGEInfographics(l.public),l.shared=c._condenseResultsArray(l.shared),l.user=c._condenseResultsArray(l.user),l.favoriteIds=c._condenseResultsArray(l.favoriteIds),l.gallery=c._condenseResultsArray(l.gallery)),s(l)})).catch((e=>o(e)))}))})).catch((e=>o(e)))}))}static _byCountryAndDefaultHiearchy(e,t){return function(r){let a=r&&r.properties&&r.properties.countries.toLowerCase()||r&&r.metadata&&r.metadata.countries.toLowerCase();a=a.split(",").map((e=>e.trim()));let s=r&&r.properties&&r.properties.hierarchy||r&&r.metadata&&r.metadata.hierarchy;return s=s.split(",").map((e=>e.trim())),a&&a.includes(e.toLowerCase())&&s&&s.includes(t)}}static _getEsriInfographicReportTemplateItems(e,t){let r="/GeoEnrichment/Infographics/Standard/"+e;return t&&(r+="/"+t),h.execute({taskPath:r}).then((e=>e.reports))}static _getSharedInfographicReportTemplateItems(e,t){let r='type:"Report Template" (access:shared OR access:org OR (access:public AND orgid:'+t+"))  typekeywords:esriWebInfographicReport  NOT owner:"+e;return c._searchItems(r,c._infographicFilter)}static _getGalleryInfographicReportTemplateItems(){let e='type:"Report Template"  typekeywords:esriWebGalleryInfographicReport  owner:(esri_reports OR esri_reports_test)';return c._searchItems(e,c._infographicFilter,{start:1,num:1e3,sortField:"modified",sortOrder:"desc",q:e})}static _getUserInfographicReportTemplateItems(e){return new Promise(((t,r)=>{let a='type:"Report Template" typekeywords:esriWebInfographicReport  owner:'+e,s=c._searchItems(a,c._infographicFilter),o=c._getUserGalleryInfographicReportTemplateItems();Promise.allSettled([s,o]).then((e=>{let r=e[0].value?e[0].value:[],a=e[1].value?e[1].value:[];t(r.concat(a))}),(e=>{r(e)}))}))}static _getFavoriteReportsIds(e,t){return new Promise(((r,a)=>{let s='type:"Web Mapping Application" typekeywords:"BAUserData.FavoriteReports" owner:'+e;c._searchItems(s,null).then((e=>{let s=e&&e[0];s?i.getItemData(s.id).then((e=>{if(!e)return void r([]);let a=e.data&&e.data["favorites"+t];if(!a)return void r([]);let s=a.map((function(e){return e.reportID}));r(s)})).catch((e=>a(e))):r([])})).catch((e=>a(e)))}))}static _getUserGalleryInfographicReportTemplateItems(){return new Promise(((e,t)=>{n.getUserGalleryInfographicReportIds().then((r=>{if(!r||!r.length)return void e([]);let a=r.map((e=>"id:"+e)).join(" OR ");c._searchItems(a,c._infographicFilter).then((t=>{e(t)})).catch((e=>t(e)))})).catch((e=>t(e)))}))}static _searchItems(e,t,r){return new Promise(((a,s)=>{let o=r||{start:1,num:1e3,sortField:"title",sortOrder:"asc",q:e};i.searchAllItems({},o).then((e=>{let r=t?e.filter(t):e;a(r)})).catch((e=>s(e)))}))}static _createReportTemplateInfos(e,t){let r=[];return e.forEach((function(e){let a=e.properties;if(a){let s=a.countries;if(l.isTrueString(a.isComparisonReport))return;if(s&&-1!==s.indexOf(t)){let o={reportID:{itemid:e.id},formats:a.formats&&a.formats.split(","),headers:[],metadata:{author:a.author,categories:[],countries:s,coverage:a.coverage,hierarchy:h.getGEDefaultHierarchy(t),keywords:a.keywords,owner:e.owner,title:e.title,type:a.type}};r.push(o)}}})),r}static _infographicFilter(e){let t=e.properties;return l.isTrueString(t.isGraphicReport)&&!l.isTrueString(t.isSingleInfographic)&&!l.isTrueString(t.isHidden)&&!l.isTrueString(t.isBlank)}}c._geReportTemplatesCache={};class h{static async getInfographicTemplatesList(e,t=!1,r,a){return await c.getInfographicReportTemplateItems(e||"US",t,r,a)}static async getClassicReportsTemplatesList(e,t=!1){return await c.getReportTemplates(e||"US",t)}static execute(e){return new Promise(((t,r)=>{const a=i.getGeoenrichmentUrl();var s=e?JSON.parse(JSON.stringify(e)):{};s.data||(s.data={}),s.data.forStorage=!1,s.data.appID=h.appID,i.executeRequest({url:a+s.taskPath,data:s.data,isStandardGeoQuery:s.isStandardGeoQuery}).then(t).catch(r)}))}static createReport(e){return new Promise(((t,r)=>{const a=i.getGeoenrichmentUrl();e.appID=h.appID;let s=a.toString()+"/Geoenrichment/CreateReport";i.executeRequest({url:s,data:e}).then(t).catch(r)}))}static searchStdGeography(e,t){return new Promise((async(r,a)=>{if(!e||!e.length)return void r([]);let s=await this.getGEDefaultHierarchy(t?.sourceCountry||"US",t?.token),o={geographyQuery:e,featureLimit:t?.featureLimit||10,geographyLayers:t?.geographyLayers||["US.States","US.Counties","US.Places"],useFuzzySearch:t?.useFuzzySearch,sourceCountry:t?.sourceCountry||"US",langCode:t?.langCode||"en-us",optionalCountryHierarchy:t?.optionalCountryHierarchy||s};this.standardGeographyQuery(o).then((e=>r(e))).catch((e=>a(e)))}))}static requestStdGeography(e,t,r){return new Promise((async(a,s)=>{let o=await this.getGEDefaultHierarchy(r?.sourceCountry||"US",r?.token),i={geographyLayers:[e],featureLimit:r?.featureLimit||1,returnGeometry:r?.returnGeometry,generalizationLevel:r?.generalizationLevel||0,geographyIDs:[t],sourceCountry:r?.sourceCountry||"US",langCode:r?.langCode||"en-us",optionalCountryHierarchy:r?.optionalCountryHierarchy||o};this.standardGeographyQuery(i).then((e=>a(e))).catch((e=>s(e)))}))}static standardGeographyQuery(e){return new Promise(((t,r)=>{let a={data:e,isStandardGeoQuery:!0,taskPath:"/StandardGeographyQuery/execute",appID:h.appID};h.execute(a).then((e=>{let a=e&&e.results&&e.results.length&&e.results[0],s=a&&a.value&&a.value.features;if(s)t(s);else{let t=e&&e.messages&&e.messages.length;r(t)}})).catch((e=>{r(e)}))}))}static getStoredDefaultHierarchy(e){let t;if(window.localStorage){let r=localStorage.getItem(h._defaultHierarchyStorageName);if(r&&a.U.hasText(r)){let a=JSON.parse(r);t=a[e],h._defaultHierarchies=a}}return t}static setStoredDefaultHierarchy(e,t){try{h.getStoredDefaultHierarchy(e),h._defaultHierarchies||(h._defaultHierarchies={}),h._defaultHierarchies[e]=t,window.localStorage&&localStorage.setItem(h._defaultHierarchyStorageName,JSON.stringify(h._defaultHierarchies))}catch(e){console.log("GEClient error",e)}}static getGEDefaultHierarchy(e,t){return new Promise(((r,s)=>{let o="US";e&&a.U.hasText(e)&&(o=e);let n=h.getStoredDefaultHierarchy(o);if(n&&a.U.hasText(n))return void r(n);let l=i.getGeoenrichmentUrl().toString()+"/Geoenrichment/Countries/"+e+"?f=pjson";const c=t?{appID:h.appID,token:t}:{appID:h.appID};i.executeRequest({url:l,data:c}).then((e=>{let t="US",a=e.countries[0].hierarchies;if(a&&a.length>0)for(let e=0;e<a.length;e++){let r=a[e];if(r.default){t=r.ID,h.setStoredDefaultHierarchy(o,r.ID);break}}r(t)})).catch(s)}))}static getStandardGeographyLevels(e,t,r){return new Promise(((s,o)=>{e&&a.U.hasText(e)||(e="US"),h.getGEDefaultHierarchy(e).then((a=>{a=r||a,h._geographyLevelsCache||(h._geographyLevelsCache={});const n=a?e+"-"+a:e;if(!h._geographyLevelsCache[n]){let r=i.getGeoenrichmentUrl().toString()+"/Geoenrichment/StandardGeographyLevels/"+e;r+=a?"/"+a+"?f=pjson":"?f=pjson",h._geographyLevelsCache[n]=i.executeRequest({url:r,data:{langCode:t||"en-us",appID:h.appID}})}h._geographyLevelsCache[n].then((e=>{let t;if(e&&e.geographyLevels&&e.geographyLevels[0]&&e.geographyLevels[0].hierarchies){let r=e.geographyLevels[0].hierarchies;for(let e=0;e<r.length;e++)if(r[e].ID==a){t=r[e];break}t||(t=r[0])}s(t)})).catch(o)})).catch(o)})).catch((e=>{console.log("GEClient error",e)}))}}h._defaultHierarchyStorageName="GEClient-default-hierarchy",h.appID="esriexperiencebuilder",h.enrich=function(e){return new Promise((async(t,r)=>{const a=e;var s=o.getUrl("geoenrich")+"/Geoenrichment/Enrich";a.forStorage=!1,a.appID=h.appID,i.executeRequest({url:s,data:a}).then((function(e){var a=e&&e.results&&e.results.length&&e.results[0],s=a&&a.value&&a.value.FeatureSet&&a.value.FeatureSet.length&&a.value.FeatureSet[0];if(s.features&&s.features.length)t(e);else{var o=e&&e.messages&&e.messages.length&&e.messages[0].description;o||(o="getfacts-no-data"),r(o)}}),(function(e){r(e)}))}))}}}]);