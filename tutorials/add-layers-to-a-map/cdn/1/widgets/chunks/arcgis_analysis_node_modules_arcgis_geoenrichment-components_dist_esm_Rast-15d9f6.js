"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["extensions_widgets_arcgis_analysis_node_modules_arcgis_geoenrichment-components_dist_esm_Rast-15d9f6"],{48802:(e,s,t)=>{t.r(s),t.d(s,{default:()=>i});var r=t(75845),o=t(36977);t(12846),t(68700),t(7835);const i=class{async decode(e){const s=await(0,o.T)(e.data,e.options);return s&&s.toJSON()}symbolize(e){e.pixelBlock=o.u.fromJSON(e.pixelBlock),e.extent=e.extent?r.M.fromJSON(e.extent):null;const s=this.symbolizer.symbolize(e);return Promise.resolve(s&&s.toJSON())}async updateSymbolizer(e){var s;this.symbolizer=o.N.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===(null==(s=this.symbolizer)?void 0:s.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=e.histograms)}stretch(e){const s=this.symbolizer.simpleStretch(o.u.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(s&&s.toJSON())}estimateStatisticsHistograms(e){const s=(0,o.r)(o.u.fromJSON(e.srcPixelBlock));return Promise.resolve(s)}split(e){const s=(0,o.U)(o.u.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel);return s&&s.forEach(((e,t)=>{s.set(t,null==e?void 0:e.toJSON())})),Promise.resolve(s)}async mosaicAndTransform(e){const s=e.srcPixelBlocks.map((e=>e?new o.u(e):null)),t=(0,o.p)(s,e.srcMosaicSize);if(!e.coefs)return t&&t.toJSON();const r=(0,o.C)(t,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation);return r&&r.toJSON()}}}}]);