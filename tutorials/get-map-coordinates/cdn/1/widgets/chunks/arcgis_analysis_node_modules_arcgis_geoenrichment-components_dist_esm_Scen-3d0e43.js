"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["extensions_widgets_arcgis_analysis_node_modules_arcgis_geoenrichment-components_dist_esm_Scen-3d0e43"],{69677:(e,t,s)=>{s.r(t),s.d(t,{default:()=>x});var r=s(75845),i=(s(12846),s(33780)),o=s(25684),a=(s(71263),s(28960)),n=s(83132),l=s(88838),p=s(48447),d=s(23472),y=s(65635),u=s(29930),c=s(26056),h=s(69292),f=s(58724),g=s(60814),m=s(46904),v=s(44428),b=s(1844),_=s(14521);s(68700),s(8021),s(42433),s(37329),s(78805),s(27735),s(72015),s(18452),s(37145),s(71834),s(65212),s(82678),s(29294),s(44521),s(76791),s(97665),s(93111),s(19907),s(86753),s(5531),s(61946),s(87242),s(31542),s(17407),s(95665),s(48095),s(83398);let I=class extends r.ao{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};(0,r.Z)([(0,r._)({type:String,json:{read:!0,write:!0}})],I.prototype,"name",void 0),(0,r.Z)([(0,r._)({type:String,json:{read:!0,write:!0}})],I.prototype,"field",void 0),(0,r.Z)([(0,r._)({type:[Number],json:{read:!0,write:!0}})],I.prototype,"currentRangeExtent",void 0),(0,r.Z)([(0,r._)({type:[Number],json:{read:!0,write:!0}})],I.prototype,"fullRangeExtent",void 0),(0,r.Z)([(0,r._)({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],I.prototype,"type",void 0),I=(0,r.Z)([(0,r.a0)("esri.layers.support.RangeInfo")],I);var w=I;const L=["3DObject","Point"],F=r.S.getLogger("esri.layers.SceneLayer"),Z=(0,c.l)();let S=class extends((0,_.R)((0,l.p)((0,o.l)((0,p.u)((0,d.s)((0,i.l)(i.b))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.definitionExpression=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.cachedDrawingInfo={color:!1},this.editingEnabled=!0,this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e){const t=this.getField(e);return t&&t.domain?t.domain:null}get fieldsIndex(){return new n.e(this.fields)}readNodePages(e,t,s){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:b.s.fromJSON(e,s)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return O[this.profile]||"mesh"}set renderer(e){(0,r.bH)(e,this.fields),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){const e=(0,r.H)(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:v.s,{query:t,editing:{supportsGlobalId:s,supportsRollbackOnFailure:i,supportsUploadWithItemId:o},data:{supportsZ:a,supportsM:n,isVersioned:l},operations:{supportsEditing:p,supportsUpdate:d}}=e,y=e.operations.supportsChangeTracking;return{query:t,editing:{supportsGlobalId:s,supportsRollbackOnFailure:i,supportsGeometryUpdate:!1,supportsUploadWithItemId:o},data:{supportsZ:a,supportsM:n,isVersioned:l},operations:{supportsEditing:p&&y,supportsAdd:!1,supportsDelete:!1,supportsUpdate:d&&y}}}get defaultPopupTemplate(){return(0,r.H)(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return(0,r.H)(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,t){const s=t.store.profile;return null!=s&&j[s]?j[s]:(F.error("Unknown or missing profile",{profile:s,layer:this}),"mesh-pyramids")}load(e){const t=(0,r.H)(e)?e.signal:null,s=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(r.am).then((()=>this._fetchService(t))).then((()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t)]))).then((()=>this._validateElevationInfo())).then((()=>this._applyAssociatedLayerOverrides())).then((()=>this._populateFieldUsageInfo())).then((()=>(0,f.t)(this,{origin:"service"},t))).then((()=>(0,r.bH)(this.renderer,this.fields)));return this.addResolvingPromise(s),Promise.resolve(this)}createQuery(){const e=new m.R;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryFeatures(e||this.createQuery(),t))).then((e=>{if(e&&e.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryObjectIds(e||this.createQuery(),t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(F.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return(0,g.a)(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return(0,r.H)(e)&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),(0,r.t)(this.associatedLayer))throw new r.s("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new r.s("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new r.s("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const s=this.fieldsIndex.get(e);if(!s)throw new r.s("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const e of this.statisticsInfo)if(e.name===s.name){const s=(0,r.b3)(this.parsedUrl.path,e.href);return(0,r.U)(s,{query:{f:"json"},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new r.s("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(0,e)}async applyEdits(e,t){const i=await s.e("extensions_widgets_arcgis_analysis_node_modules_arcgis_geoenrichment-components_dist_esm_edit-3c192b").then(s.bind(s,30089));if(await this.load(),(0,r.t)(this.associatedLayer))throw new r.s(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),i.applyEdits(this,this.associatedLayer.source,e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&-1===L.indexOf(e.layerType))throw new r.s("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new r.s("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new r.s("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});!function(e,t){let s=!1,i=!1;if(null==e)s=!0,i=!0;else{const r=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":s=!0,i=r;break;case"vertex-reference-frame":s=!0,i=!r;break;default:s=!1}}if(!s)throw new r.s("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!i)throw new r.s("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new r.s("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some((t=>t.name===e.name))),s=!!((0,r.H)(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some((t=>t&&e.name===t.name))),i={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||s,supportsLayerQuery:s};this._fieldUsageInfo[e.name]=i}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){if((0,r.t)(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const t of this.associatedLayer.fields){const s=this.getField(t.name);s?(!s.domain&&t.domain&&(s.domain=t.domain.clone()),s.editable=t.editable,s.nullable=t.nullable,s.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if((0,r.t)(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],t=(0,r.aI)(this);for(let s=0;s<e.length;s++){const r=e[s];this._buddyIsMoreImportant(r)&&(t.setDefaultOrigin(this.associatedLayer.originOf(r)),t.set(r,this.associatedLayer[r]),t.setDefaultOrigin("user"))}}async _setAssociatedFeatureLayer(e){if(-1===["mesh-pyramids","points"].indexOf(this.profile))return;const t=new v.l(this.parsedUrl,this.portalItem,e);try{this.associatedLayer=await t.fetch()}catch(e){(0,r.aD)(e)||this._logWarningOnPopupEnabled()}}_logWarningOnPopupEnabled(){(0,r.dx)(this,["popupTemplate","popupEnabled"],(()=>this.popupEnabled&&null!=this.popupTemplate)).then((()=>()=>{const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?F.warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):F.info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}))}_buddyIsMoreImportant(e){if((0,r.t)(this.associatedLayer))return!1;const t=this.originIdOf(e),s=this.associatedLayer.originIdOf(e);return null!=s&&s<=2?null==t||t<2:null!=s&&s<=3&&(null==t||t<3)}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&F.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&F.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};(0,r.Z)([(0,r._)({types:{key:"type",base:y.p,typeMap:{selection:y.a}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],S.prototype,"featureReduction",void 0),(0,r.Z)([(0,r._)({type:[w],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],S.prototype,"rangeInfos",void 0),(0,r.Z)([(0,r._)({json:{read:!1}})],S.prototype,"associatedLayer",void 0),(0,r.Z)([(0,r._)({type:["show","hide"]})],S.prototype,"listMode",void 0),(0,r.Z)([(0,r._)({type:["ArcGISSceneServiceLayer"]})],S.prototype,"operationalLayerType",void 0),(0,r.Z)([(0,r._)({json:{read:!1},readOnly:!0})],S.prototype,"type",void 0),(0,r.Z)([(0,r._)({...Z.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],S.prototype,"fields",void 0),(0,r.Z)([(0,r._)({readOnly:!0})],S.prototype,"fieldsIndex",null),(0,r.Z)([(0,r._)({type:h.p,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],S.prototype,"floorInfo",void 0),(0,r.Z)([(0,r._)(Z.outFields)],S.prototype,"outFields",void 0),(0,r.Z)([(0,r._)({type:b.s,readOnly:!0,json:{read:!1}})],S.prototype,"nodePages",void 0),(0,r.Z)([(0,r.ab)("service","nodePages",["nodePages","pointNodePages"])],S.prototype,"readNodePages",null),(0,r.Z)([(0,r._)({type:[b.l],readOnly:!0})],S.prototype,"materialDefinitions",void 0),(0,r.Z)([(0,r._)({type:[b.u],readOnly:!0})],S.prototype,"textureSetDefinitions",void 0),(0,r.Z)([(0,r._)({type:[b.m],readOnly:!0})],S.prototype,"geometryDefinitions",void 0),(0,r.Z)([(0,r._)({readOnly:!0})],S.prototype,"serviceUpdateTimeStamp",void 0),(0,r.Z)([(0,r._)({readOnly:!0})],S.prototype,"attributeStorageInfo",void 0),(0,r.Z)([(0,r._)({readOnly:!0})],S.prototype,"statisticsInfo",void 0),(0,r.Z)([(0,r._)({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:!0}})],S.prototype,"definitionExpression",void 0),(0,r.Z)([(0,r._)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],S.prototype,"path",void 0),(0,r.Z)([(0,r._)(o.m)],S.prototype,"elevationInfo",null),(0,r.Z)([(0,r._)({type:String})],S.prototype,"geometryType",null),(0,r.Z)([(0,r._)(o.p)],S.prototype,"labelsVisible",void 0),(0,r.Z)([(0,r._)({type:[u.E],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:y.r},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:y.r},write:!0}})],S.prototype,"labelingInfo",void 0),(0,r.Z)([(0,r._)(o.d)],S.prototype,"legendEnabled",void 0),(0,r.Z)([(0,r._)(o.g)],S.prototype,"opacity",void 0),(0,r.Z)([(0,r._)({types:a.n,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],S.prototype,"renderer",null),(0,r.Z)([(0,r._)({json:{read:!1}})],S.prototype,"cachedDrawingInfo",void 0),(0,r.Z)([(0,r.ab)("service","cachedDrawingInfo")],S.prototype,"readCachedDrawingInfo",null),(0,r.Z)([(0,r._)({readOnly:!0,json:{read:!1}})],S.prototype,"capabilities",null),(0,r.Z)([(0,r._)({type:Boolean,json:{read:!1}})],S.prototype,"editingEnabled",void 0),(0,r.Z)([(0,r._)(o.c)],S.prototype,"popupEnabled",void 0),(0,r.Z)([(0,r._)({type:r.bL,json:{name:"popupInfo",write:!0}})],S.prototype,"popupTemplate",void 0),(0,r.Z)([(0,r._)({readOnly:!0,json:{read:!1}})],S.prototype,"defaultPopupTemplate",null),(0,r.Z)([(0,r._)({type:String,json:{read:!1}})],S.prototype,"objectIdField",void 0),(0,r.Z)([(0,r.ab)("service","objectIdField",["objectIdField","fields"])],S.prototype,"readObjectIdField",null),(0,r.Z)([(0,r._)({type:String,json:{read:!1}})],S.prototype,"globalIdField",void 0),(0,r.Z)([(0,r.ab)("service","globalIdField",["globalIdField","fields"])],S.prototype,"readGlobalIdField",null),(0,r.Z)([(0,r._)({readOnly:!0,type:String,json:{read:!1}})],S.prototype,"displayField",null),(0,r.Z)([(0,r._)({type:String,json:{read:!1}})],S.prototype,"profile",void 0),(0,r.Z)([(0,r.ab)("service","profile",["store.profile"])],S.prototype,"readProfile",null),(0,r.Z)([(0,r._)({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],S.prototype,"normalReferenceFrame",void 0),(0,r.Z)([(0,r._)(o.a)],S.prototype,"screenSizePerspectiveEnabled",void 0),S=(0,r.Z)([(0,r.a0)("esri.layers.SceneLayer")],S);const j={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},O={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"},x=S}}]);