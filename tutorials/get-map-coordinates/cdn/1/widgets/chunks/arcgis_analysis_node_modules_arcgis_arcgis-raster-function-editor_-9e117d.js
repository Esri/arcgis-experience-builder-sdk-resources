"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-9e117d"],{826:(e,t,i)=>{i.d(t,{A:()=>l,G:()=>o,J:()=>r,M:()=>s,P:()=>c,U:()=>n,a:()=>p,d:()=>a});const n={IDLE:"idle",VALID:"valid",INVALID:"invalid"},r={RASTER_FUNCTION_TEMPLATE:"RasterFunctionTemplate",RASTER_FUNCTION_VARIABLE:"RasterFunctionVariable",ARGUMENT_ARRAY:"ArgumentArray",RECORD_SET:"RecordSet",ECD_FILE:"ECDFile"},s={MATCH_VARIABLE:"MatchVariable",UNION_DIMENSION:"UnionDimension"},a={name:"Raster",isDataset:!0,isPublic:!1,type:r.RASTER_FUNCTION_VARIABLE},l={RFX_DTEX_COMMON_SELECT:"RFX-DTEX-COMMON-SELECT",RFX_DTE_COMMON_CHECKBOX:"CALCITE-CHECKBOX",RFX_DTE_COMMON_TEXTINPUT:"CALCITE-INPUT-TEXT",RFX_DTE_COMMON_NUMBERINPUT:"CALCITE-INPUT-NUMBER",RFX_DTE_RASTER_INPUT:"RFX-DTE-RASTER-INPUT",RFX_DTE_FEATURE_SELECT:"RFX-DTE-FEATURE-SELECT",RFX_DTEX_RASTER_VARIABLES_LIST:"RFX-DTEX-RASTER-VARIABLES-LIST",RFX_CTE_RANGED_VALUE_EDITOR:"RFX-CTE-RANGED-VALUE-EDITOR",RFX_CTE_GAMMA_EDITOR:"RFX-CTE-GAMMA-EDITOR",RFX_DTE_COLOR_RAMP_SELECTOR:"RFX-DTE-COLOR-RAMP-SELECTOR",RFX_DTE_EXTENT:"RFX-DTE-EXTENT",RFX_DTE_JSON_FILE_UPLOADER:"RFX-DTE-JSON-FILE-UPLOADER",RFX_CTE_FACTOR_FUNCTION_EDITOR:"RFX-CTE-FACTOR-FUNCTION-EDITOR",RFX_CTE_NEIGHBORHOOD_VALUES:"RFX-CTE-NEIGHBORHOOD-VALUES",RFX_CTE_SYNCHRONIZE_OUTPUT_UNIT_PICKER:"RFX-CTE-SYNCHRONIZE-OUTPUT-UNIT-PICKER"},p={ANALYSIS:"analysis",EDITOR:"editor"},o={textInput:"text-input",text:"text",raster:"raster-input",number:"number-input",boolean:"check-box",switch:"switch",field:"field-select",color:"color-input",select:"select",icon:"icon"},c={loading:"loading",success:"success",error:"error"}},59498:(e,t,i)=>{i.d(t,{D:()=>l,S:()=>n,a:()=>p,b:()=>c,f:()=>g,g:()=>o});const n={Arabic:"ar",Bosnian:"bs",Bulgarian:"bg",Catalan:"ca",Czech:"cs",Danish:"da",German:"de",Greek:"el",English:"en",EnglishUSA:"en-US",Spanish:"es",Estonian:"et",Finnish:"fi",French:"fr",Hebrew:"he",Hindi:"hi",Croatian:"hr",Hungarian:"hu",Indonesian:"id",Italian:"it",Japanese:"ja",Korean:"ko",Lithuanian:"lt",Latvian:"lv",NorwegianBokml:"nb",Dutch:"nl",Polish:"pl",PortugueseBrazil:"pt-BR",PortuguesePortugal:"pt-PT",Romanian:"ro",Russian:"ru",Serbian:"sr",Slovenian:"sl",Slovak:"sk",Swedish:"sv",Thai:"th",Turkish:"tr",Ukrainian:"uk",Vietnamese:"vi",ChineseChina:"zh-CN",ChineseHongKong:"zh-HK",ChineseTaiwan:"zh-TW"},r=["ar","de","es","fr","it","ja","ko","ru","pl","pt-br","zh-cn"],s={"ar-BH":"ar","en-AU":"en","en-CA":"en","en-GB":"en","en-US":"en","es-ES":"es","es-MX":"es","de-CH":"de","de-AT":"de","de-DE":"de","fr-CA":"fr","fr-CH":"fr","fr-FR":"fr","it-CH":"it","it-IT":"it",ind:"id",ukr:"uk"},a=[n.Arabic,n.Hebrew],l=n.English;function p(e){return!0===e?"rtl":"ltr"}function o(e=document.documentElement){const t=("[lang]",function e(t){let i;return i=void 0===t||t===document||t===window?null:t.closest("[lang]")||e(t.getRootNode().host),i}(e));const i=t?.lang??window.navigator.language,r=Object.values(n),p=l,o=function(e,t){const i=l;let n=e?.toLowerCase();if(void 0!==n&&-1!==n.indexOf("-")){const[e,t]=n.split("-");n=`${e}-${t.toUpperCase()}`}return n?!0===Object.keys(s).includes(n)?t[n]:n:i}(i,s);return{locale:r.includes(o)?o:p,rtl:a.includes(i)}}async function c(e,t){const i=e.tagName.toLowerCase(),{locale:n,rtl:r}=o(e),s=await async function(e){const{path:t,locale:i,baseURL:n}=e;let r={};try{const e=await fetch(`${n}t9n/${t}.t9n.${i}.json`);r=await e.json()}catch(e){const i=await fetch(`${n}t9n/${t}.t9n.${l}.json`);r=await i.json()}return r}({path:i,locale:n,baseURL:t});return{strings:s,dir:p(r),locale:n}}function g(e,t,i="en"){let n=i;!0===Object.keys(s).includes(i)&&(n=s[i]);const a=n.toLocaleLowerCase();return!0===r.includes(a)&&(t=t.replace(/^https?:\/\/[^/]+\/en/,(e=>e.replace("en",a)))),`${t}analyze/${e}`}},47163:(e,t,i)=>{i.r(t),i.d(t,{rfx_cte_clipping_geometry:()=>d});var n=i(14947),r=i(59498),s=(i(34319),i(92123)),a=i(90949),l=i(70049);i(99248),i(16888),i(95323),i(43278),i(46574),i(86944),i(83345),i(74656);const p="clippingGeometryOrRasterHelpClickHandler",o="useinputFeaturesHelpClickHandler",c="outputExtentHelpClickHandler",g="clippingRaster",u="clippingGeometry",h="currentExtent",d=class{constructor(e){(0,n.r)(this,e),this.rfxArgumentChange=(0,n.c)(this,"rfxArgumentChange",7),this.rasterOrGeometryValueMapper={geometryValue:void 0,rasterValue:void 0},this.extentMapper={mapExtent:void 0,inputRasterExtent:void 0,clippingRasterGeometryExtent:void 0,clippingFeatureGeometryExtent:void 0,useInputFeatureGeometryExtent:void 0},this.helpActionClickEventHandlers=new Map,this.inituseInputFeatureGeometry=e=>{this.useInputFeatureGeometryRfxArg=e;const{triggerArgs:t}=this.widgetArgs;t.UseInputFeatureGeometry.input=this.useInputFeatureGeometryRfxArg,this.useInputFeatureGeometryRfxArg?.addEventListener("calciteCheckboxChange",(e=>{const t=e.target.checked;this.useInputFeatureGeometryRfxArgValue=t,this.widgetArgs.triggerArgs.UseInputFeatureGeometry.value=t,this.widgetArgs.inputArgs.ClippingGeometry.value=this.useInputFeatureGeometryRfxArgValue?this.extentMapper.useInputFeatureGeometryExtent:this.extentMapper.clippingFeatureGeometryExtent}))},this.initExtent=e=>{this.extentWidget=e;const{inputArgs:t}=this.widgetArgs;t.Extent.input=this.extentWidget},this.handleClippingGeometryTypesChange=e=>{e.stopPropagation();const t=e.target;switch(this.clippingGeometryTypeSelected=t.value,this.clippingGeometryTypeSelected){case h:this.extentMapper.mapExtent=(0,l.j)(this.map?.extent),this.widgetArgs.inputArgs.ClippingRaster.value=void 0,this.widgetArgs.inputArgs.ClippingGeometry.value=void 0;break;case g:this.widgetArgs.inputArgs.ClippingGeometry.value=void 0;break;case u:this.widgetArgs.inputArgs.ClippingRaster.value=void 0}},this.setMapExtent=()=>{(0,s.m)(this.map)||(this.extentMapper.mapExtent=(0,l.j)(this.map?.extent),this.renderFlag=!this.renderFlag)},this.renderUpdateActiveMapExtentButton=()=>(0,n.h)("calcite-button",{alignment:"center",appearance:"outline",kind:"neutral",scale:a.U.Scale,type:"button",width:"full",onClick:this.setMapExtent},this.strings.currentMapExtent),this.handleClippingGeometryRasterChange=async({detail:{value:e}})=>{this.rasterOrGeometryValueMapper.rasterValue=e;const t=await(this.clippingGeometryRasterArg?.getSelectedLayer?.()),i=(0,l.j)(t);this.widgetArgs.inputArgs.ClippingRaster.value=(0,l.d)(t),this.extentMapper.clippingRasterGeometryExtent=i,this.renderFlag=!this.renderFlag},this.handleClippingGeometryFeatureChange=async({detail:{value:e}})=>{this.rasterOrGeometryValueMapper.geometryValue=e;const t=await(this.clippingGeometryFeatureArg?.getSelectedLayer?.()),i=(0,l.j)(t);this.extentMapper.clippingFeatureGeometryExtent=i;const n=await(0,l.k)(t);let r={};r="polygon"===t.geometryType?{rings:n?.map((e=>e?.toJSON().rings?.[0])),spatialReference:n?.[0]?.toJSON().spatialReference}:"point"===t.geometryType?{geometries:n?.map((e=>{const t=e.toJSON();return{x:t.x,y:t.y}})),spatialReference:n?.[0]?.toJSON().spatialReference}:i,this.extentMapper.useInputFeatureGeometryExtent=r,this.widgetArgs.inputArgs.ClippingGeometry.value=this.useInputFeatureGeometryRfxArgValue?r:i,this.renderFlag=!this.renderFlag},this.widgetArgs=void 0,this.clippingGeometryTypeSelected=void 0,this.clippingTypeRfxArgValue=void 0,this.useInputFeatureGeometryRfxArgValue=!1,this.extentvalue=void 0,this.renderFlag=!1}onWidgetArgsChange(e){this.processWidgetArgs(e)}connectedCallback(){this.processWidgetArgs(this.widgetArgs)}async componentWillLoad(){({strings:this.strings,dir:this.direction}=await(0,r.b)(this.hostElement,(0,n.g)("."))),await this.setInitialState(this.widgetArgs)}componentWillRender(){const e={1:()=>{switch(this.clippingGeometryTypeSelected){case h:return this.extentMapper.mapExtent;case g:return this.extentMapper.clippingRasterGeometryExtent;case u:return this.extentMapper.clippingFeatureGeometryExtent}},2:()=>this.extentMapper.inputRasterExtent}[this.clippingTypeRfxArgValue].bind(this)();this.extentvalue=e}componentDidLoad(){this.attachHelpClickEventHandlers()}processWidgetArgs({browseProperties:e,triggerArgs:t}){this.map=e.map,((0,s.m)(t)||(0,s.m)(t.Raster)||(0,s.m)(t.ClippingType)||(0,s.m)(t.UseInputFeatureGeometry))&&console.error("Invalid Schema: TriggerArgs is incorrect!");const i=t.Raster;this.rasterArg=i,i.input?.addEventListener("rfxArgumentChange",this.handleRasterChange.bind(this));const n=t.ClippingType;this.clippingTypeRfxArg=n,n.input?.addEventListener("rfxArgumentChange",(({detail:{value:e}})=>{this.clippingTypeRfxArgValue=e}))}attachHelpClickEventHandlers(){const e=this.widgetArgs.onHelpActionClick({heading:this.widgetArgs.inputArgs.ClippingGeometry.displayName,referenceElement:this.clippingGeometryOrRasterContainer,helpTextID:this.widgetArgs.helpTextIDs?.clip_clippinggeometryorraster}),t=this.widgetArgs.onHelpActionClick({heading:this.widgetArgs.inputArgs.Extent.displayName,referenceElement:this.extentContainer,helpTextID:this.widgetArgs.helpTextIDs?.clip_outputextent});this.helpActionClickEventHandlers.set(p,e),this.helpActionClickEventHandlers.set(c,t)}async setInitialState({inputArgs:e,triggerArgs:t}){const i=t.Raster,n=i?.input,r=await(n?.getSelectedLayer?.());this.extentMapper.inputRasterExtent=(0,l.j)(r);const a=t.ClippingType;this.clippingTypeRfxArgValue=a.value;const p=t.UseInputFeatureGeometry;this.useInputFeatureGeometryRfxArgValue=!!p.value;const o=e.Extent;this.extentvalue=o.value,this.extentMapper.mapExtent=(0,l.j)(this.map?.extent);const c=!(0,s.m)(e.ClippingRaster?.value),d=!(0,s.m)(e.ClippingGeometry?.value),y=!c&&!d,m=1===this.clippingTypeRfxArgValue;c&&m&&(this.extentMapper.clippingRasterGeometryExtent=this.extentvalue),d&&m&&(this.extentMapper.clippingFeatureGeometryExtent=this.extentvalue),this.clippingGeometryTypeSelected=y?h:c?g:u}async handleRasterChange(){const e=this.rasterArg?.input,t=await(e?.getSelectedLayer?.()),i=(0,l.j)(t);this.extentMapper.inputRasterExtent=i}renderClippingGeometryTypes(){const e=[{key:h,label:this.strings.activeMapViewExtent},{key:g,label:this.strings.chooseRaster},{key:u,label:this.strings.chooseGeometry}];return(0,n.h)("rfx-dtex-common-select",{mode:this.widgetArgs.mode,options:e,value:this.clippingGeometryTypeSelected,onRfxArgumentChange:this.handleClippingGeometryTypesChange})}renderClippingGeometryRaster(){const{inputLayers:e}=this.widgetArgs;return(0,n.h)("rfx-dte-raster-input",{mode:this.widgetArgs.mode,ref:e=>this.clippingGeometryRasterArg=e,inputLayers:e,value:this.rasterOrGeometryValueMapper.rasterValue,onRfxArgumentChange:this.handleClippingGeometryRasterChange,rfxBrowseLayerClick:this.widgetArgs.onRfxBrowseLayerClick})}renderClippingGeometryFeature(){const{featureLayers:e}=this.widgetArgs;return(0,n.h)("rfx-dte-feature-select",{mode:this.widgetArgs.mode,ref:e=>this.clippingGeometryFeatureArg=e,inputLayers:e,value:this.rasterOrGeometryValueMapper.geometryValue,onRfxArgumentChange:this.handleClippingGeometryFeatureChange,rfxBrowseLayerClick:this.widgetArgs.onRfxBrowseLayerClick})}render(){return(0,n.h)("div",null,(0,n.h)("calcite-label",{alignment:"start",scale:a.U.Scale,layout:"default",ref:e=>{this.clippingGeometryOrRasterContainer=e}},(0,n.h)("rfx-label",{label:this.widgetArgs.inputArgs.ClippingGeometry.displayName,onRfxLabelHelpActionClick:()=>this.helpActionClickEventHandlers?.get(p)()}),this.renderClippingGeometryTypes(),this.clippingGeometryTypeSelected===h?this.renderUpdateActiveMapExtentButton():null,this.clippingGeometryTypeSelected===g?this.renderClippingGeometryRaster():null,this.clippingGeometryTypeSelected===u?this.renderClippingGeometryFeature():null),this.clippingGeometryTypeSelected===u?(0,n.h)("calcite-label",{alignment:"start",scale:a.U.Scale,layout:"inline-space-between",ref:e=>{this.useInputFeatureGeometryContainer=e;const t=this.widgetArgs.onHelpActionClick({heading:this.widgetArgs.triggerArgs.UseInputFeatureGeometry.displayName,referenceElement:this.useInputFeatureGeometryContainer,helpTextID:this.widgetArgs.helpTextIDs?.clip_useinputfeaturesforclippinggeometry});this.helpActionClickEventHandlers.set(o,t)}},(0,n.h)("calcite-checkbox",{checked:this.useInputFeatureGeometryRfxArgValue,ref:this.inituseInputFeatureGeometry}),(0,n.h)("rfx-label",{label:this.widgetArgs.triggerArgs.UseInputFeatureGeometry.displayName,onRfxLabelHelpActionClick:()=>this.helpActionClickEventHandlers?.get(o)()})):null,(0,n.h)("calcite-label",{alignment:"start",scale:a.U.Scale,layout:"default",ref:e=>{this.extentContainer=e}},(0,n.h)("rfx-label",{label:this.widgetArgs.inputArgs.Extent.displayName,onRfxLabelHelpActionClick:()=>this.helpActionClickEventHandlers?.get(c)()}),(0,n.h)("rfx-dte-extent",{ref:this.initExtent,value:this.extentvalue})))}static get assetsDirs(){return["t9n"]}get hostElement(){return(0,n.a)(this)}static get watchers(){return{widgetArgs:["onWidgetArgsChange"]}}};i(25829),i(46717),i(55139),i(57098),i(91123),i(78979),i(46869),i(27703),i(826)},92123:(e,t,i)=>{i.d(t,{A:()=>c,C:()=>h,D:()=>u,F:()=>g,R:()=>l,T:()=>p,a:()=>o,b:()=>y,c:()=>m,e:()=>A,f:()=>E,g:()=>R,i:()=>d,k:()=>T,l:()=>x,m:()=>f});var n=i(25829),r="[object Map]",s="[object Set]",a=Object.prototype.hasOwnProperty;const l="RasterFunctionTemplate",p="type",o="RasterFunctionVariable",c="arguments",g="function",u="distanceLegacy",h={MIN_VALUE:"minValue",MAX_VALUE:"maxValue",LESS_THAN:"lessThan",GREATER_THAN:"greaterThan"};function d(e){return!!e&&null!=e._object_ref_id}function y(e){return""!==(e=String(e).trim())&&/^[+-]?(\d+)?(\.\d+)?$/.test(e)}function m(e){return e=String(e).trim(),["true","false"].indexOf(e)>=0}function A(e){return e.type&&e.type.toLowerCase().indexOf("recordset")>=0}function E(e){if(!e)return!1;const t=e.type;return[l,o].indexOf(t)>=0||!(!(i=e)||!(i.type&&i.type.toLowerCase().indexOf("colorramp")>=0||i.value&&i.value.type&&i.value.type.toLowerCase().indexOf("colorramp")>=0))||A(e);var i}function R(e){return"feature"===e.type}function C(e){return"imagery-tile"===e.type&&e.sourceJSON.capabilities.toLowerCase().indexOf("tilesonly")<0}function T(e){return"imagery"===e.type||C(e)}function x(e){return"imagery-tile"===e.type&&!C(e)}function f(e){return null==e||"string"==typeof e&&""===e||(0,n.h)(e)&&function(e){if(null==e)return!0;if((0,n.i)(e)&&((0,n.a)(e)||"string"==typeof e||"function"==typeof e.splice||(0,n.b)(e)||(0,n.c)(e)||(0,n.d)(e)))return!e.length;var t=(0,n.g)(e);if(t==r||t==s)return!e.size;if((0,n.e)(e))return!(0,n.f)(e).length;for(var i in e)if(a.call(e,i))return!1;return!0}(e)||Array.isArray(e)&&e.length<1||"object"==typeof e&&!1===(0,n.a)(e)&&function(e){let t=!0;if("object"==typeof e&&!1===(0,n.a)(e))for(const i in e){const n=e?.[i];if(!0===e.hasOwnProperty(i)&&null!=n&&""!==n){t=!1;break}}return t}(e)}},90949:(e,t,i)=>{i.d(t,{C:()=>r,U:()=>n,a:()=>s});const n={Scale:"s",PopoverTimer:60},r={s:"s",m:"m",l:"l"},s={absolute:"absolute",fixed:"fixed"}}}]);