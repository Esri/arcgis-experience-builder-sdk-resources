System.register(["jimu-core","jimu-arcgis"],(function(e,t){var a={},n={};return{setters:[function(e){a.AbstractMessageAction=e.AbstractMessageAction,a.AppMode=e.AppMode,a.DataSourceManager=e.DataSourceManager,a.DataSourcesChangeType=e.DataSourcesChangeType,a.Immutable=e.Immutable,a.MessageCarryData=e.MessageCarryData,a.MessageType=e.MessageType,a.MutableStoreManager=e.MutableStoreManager,a.RecordSetChangeType=e.RecordSetChangeType,a.getAppStore=e.getAppStore},function(e){n.loadArcGISJSAPIModules=e.loadArcGISJSAPIModules}],execute:function(){e((()=>{"use strict";var e={62686:e=>{e.exports=n},79244:e=>{e.exports=a}},t={};function o(a){var n=t[a];if(void 0!==n)return n.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,o),r.exports}o.d=(e,t)=>{for(var a in t)o.o(t,a)&&!o.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};o.r(r),o.d(r,{default:()=>y});var s=o(79244),i=o(62686);function u(e,t){let a=null;return e.clone?a=e.clone():(a=t.fromJSON(Object.assign({},e)),a.attributes=Object.assign({},e.attributes)),a}function l(e,t,a){if(e&&t){const n=(0,s.getAppStore)().getState().appConfig.messageConfigs;if(n){return c(e,t,n,a,["zoomToFeature"])}}return!1}function c(e,t,a,n,o){if(a){const r=Object.values(a);for(let a=0;a<r.length;a++){const s=r[a];if(s.widgetId===e&&s.messageType===n){const e=s.actions;for(let a=0;a<e.length;a++){const n=e[a];if(n.widgetId===t&&o.includes(n.actionName))return!0}}}}return!1}function d(e,t){var a,n;const o=S(),r=null===(a=null==o?void 0:o.widgets)||void 0===a?void 0:a[e],i=null===(n=null==r?void 0:r.manifest)||void 0===n?void 0:n.publishMessages;let u=s.MessageCarryData.UseDataSource;return null==i||i.forEach((e=>{const a=e;(null==a?void 0:a.messageCarryData)&&(null==a?void 0:a.messageType)===t&&(u=null==a?void 0:a.messageCarryData)})),u}function g(e,t){var a;const n=d(e,t),o=S(),r=null===(a=null==o?void 0:o.widgets)||void 0===a?void 0:a[e],i=(null==r?void 0:r.useDataSources)||(0,s.Immutable)([]),u=function(e){var t;const a=null!==(t=null==e?void 0:e.map((e=>({dataSourceId:e,mainDataSourceId:e,rootDataSourceId:null}))))&&void 0!==t?t:[];return(0,s.Immutable)(a)}(null==r?void 0:r.outputDataSources)||(0,s.Immutable)([]),l=function(e){const t=[],a=p(e),n=null==a?void 0:a.useMapWidgetIds,o={};(null==n?void 0:n.length)>0&&n.forEach((e=>{if(e){const a=p(e),n=null==a?void 0:a.useDataSources;n&&n.forEach((e=>{var a;const n=null===(a=null==e?void 0:e.asMutable)||void 0===a?void 0:a.call(e,{deep:!0});n&&n.dataSourceId&&!o[n.dataSourceId]&&(o[n.dataSourceId]=!0,t.push(n))}))}}));return(0,s.Immutable)(t)}(e),c=u,g=(null==r?void 0:r.useDataSources)?i:l,f=(0,s.Immutable)(g.asMutable({deep:!0}).concat(c.asMutable({deep:!0})));switch(n){case s.MessageCarryData.OutputDataSource:return c;case s.MessageCarryData.UseDataSource:return g;case s.MessageCarryData.BothDataSource:return f}}function p(e){var t;if(!e)return null;const a=S();return null===(t=null==a?void 0:a.widgets)||void 0===t?void 0:t[e]}function S(){var e,t,a;return window.jimuConfig.isBuilder?null===(t=null===(e=(0,s.getAppStore)().getState())||void 0===e?void 0:e.appStateInBuilder)||void 0===t?void 0:t.appConfig:null===(a=(0,s.getAppStore)().getState())||void 0===a?void 0:a.appConfig}function f(){var e;const t=function(){var e;return(null===(e=window.jimuConfig)||void 0===e?void 0:e.isBuilder)?(0,s.getAppStore)().getState().appStateInBuilder:(0,s.getAppStore)().getState()}();return(null===(e=null==t?void 0:t.appRuntimeInfo)||void 0===e?void 0:e.appMode)===s.AppMode.Express}function v(e){const t=(0,s.getAppStore)().getState().appRuntimeInfo.appMode;if(e.messageType===s.MessageType.ExtentChange)return t!==s.AppMode.Express;if(e.messageType===s.MessageType.DataSourcesChange)return!0;if(e.messageType!==s.MessageType.DataRecordSetChange&&e.messageType!==s.MessageType.DataRecordsSelectionChange&&e.messageType!==s.MessageType.DataSourceFilterChange)return!1;{const t=s.DataSourceManager.getInstance(),a=g(e.widgetId,e.messageType);return!(0!==a.length||!function(e){var t;const a=e.widgetId;if((e.messageType===s.MessageType.DataRecordSetChange||e.messageType===s.MessageType.DataRecordsSelectionChange)&&a){const e=p(a);if(e&&"widgets/common/search/"===e.uri&&(null===(t=e.useMapWidgetIds)||void 0===t?void 0:t.length)>0)return!0}return!1}(e))||a.some((e=>{const a=t.getDataSource(e.dataSourceId);return!!a&&("WEB_MAP"===a.type||"WEB_SCENE"===a.type||!!a.getGeometryType())}))}}function h(e){const t=f(),a=null==e?void 0:e.useAnyTriggerData;return t||a}class y extends s.AbstractMessageAction{constructor(){super(...arguments),this.NoLockTriggerLayerWidgets=["Map"]}filterMessageDescription(e){return v(e)}filterMessage(e){return!0}getDefaultMessageActionConfig(e){const t={useDataSource:null,useDataSources:[],goToInitialMapExtentWhenSelectionCleared:!1};return e.type!==s.MessageType.DataRecordsSelectionChange&&e.type!==s.MessageType.DataSourceFilterChange||(t.useAnyTriggerData=!0),t}getSettingComponentUri(e,t){const a=(0,s.getAppStore)().getState().appRuntimeInfo.appMode;return e===s.MessageType.DataRecordsSelectionChange||e===s.MessageType.DataSourceFilterChange?a===s.AppMode.Express?null:"message-actions/pan-to-action-setting":null}onExecute(e,t){return(0,i.loadArcGISJSAPIModules)(["esri/Graphic"]).then((a=>{let n=null;switch([n]=a,e.type){case s.MessageType.DataRecordSetChange:if(l(e.widgetId,this.widgetId,s.MessageType.DataRecordSetChange))break;const a=e;if(a.changeType===s.RecordSetChangeType.CreateUpdate){const e=[];a.dataRecordSets.forEach((t=>{if(t&&t.records)for(let a=0;a<t.records.length;a++){const o=t.records[a].feature;if(o){const t=u(o,n);e.push(t.geometry)}}}));const t={type:"pan-to-geometries",geometries:e};s.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"panToActionValue.value",t)}break;case s.MessageType.DataRecordsSelectionChange:if(l(e.widgetId,this.widgetId,s.MessageType.DataRecordsSelectionChange))break;const o=e.records,r=[];if(o){if(o[0]){const e=function(e,t){var a,n;if(h(t))return!0;if(0===e.length)return!!(null==t?void 0:t.goToInitialMapExtentWhenSelectionCleared);const o=[],r=e[0],s=null===(a=null==r?void 0:r.dataSource)||void 0===a?void 0:a.getMainDataSource();if(s){o.push(s.id);const e=s.getAssociatedDataSource&&s.getAssociatedDataSource();e&&o.push(e.id)}return 0!==o.length&&(null===(n=null==t?void 0:t.useDataSources)||void 0===n?void 0:n.some((e=>(null==e?void 0:e.mainDataSourceId)&&o.includes(null==e?void 0:e.mainDataSourceId))))}(o,t);if(!e)break}for(let e=0;e<o.length;e++){const t=o[e].feature;if(t){const e=u(t,n);r.push(e.geometry)}}}if(r.length>0){const e={type:"pan-to-geometries",geometries:r};s.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"panToActionValue.value",e)}else if(null==t?void 0:t.goToInitialMapExtentWhenSelectionCleared){const e={type:"pan-to-map-initial-extent"};s.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"panToActionValue.value",e)}break;case s.MessageType.ExtentChange:if(l(e.widgetId,this.widgetId,s.MessageType.ExtentChange))break;const i=e,c=i.getRelatedWidgetIds();if(c.includes(this.widgetId))break;const d={value:{type:"pan-to-extent",geometries:[i.extent],stationary:i.stationary,publishTime:i.publishTime,publishWidgetId:i.widgetId},relatedWidgets:c};s.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"panToActionValue",d);break;case s.MessageType.DataSourceFilterChange:if(l(e.widgetId,this.widgetId,s.MessageType.DataSourceFilterChange))break;const g=e,{validChangedDataSourceIds:p,useDataSourceIds:S}=function(e,t){var a,n;let o=[],r=[];const s=e.dataSourceIds||[];return h(t)?(o=s.slice(),r=s.slice()):((null===(a=null==t?void 0:t.useDataSources)||void 0===a?void 0:a.length)>0&&(null===(n=null==t?void 0:t.useDataSources)||void 0===n||n.forEach((e=>{const t=null==e?void 0:e.dataSourceId;t&&r.push(t)}))),o=s.filter((e=>r.includes(e)))),{validChangedDataSourceIds:o,useDataSourceIds:r}}(g,t);if(0===p.length)break;const f={type:"pan-to-query-params",filterChangedDataSourceIds:p,useDataSourceIds:S};s.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"panToActionValue.value",f);break;case s.MessageType.DataSourcesChange:if(l(e.widgetId,this.widgetId,s.MessageType.DataSourcesChange))break;const v=e;if(v.changeType===s.DataSourcesChangeType.Create){const e=[];v.dataSources.forEach((t=>{e.push(t.id)}));const t={type:"pan-to-layers",dataSourceIds:e};s.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"panToActionValue.value",t)}}return!0}))}}return r})())}}}));