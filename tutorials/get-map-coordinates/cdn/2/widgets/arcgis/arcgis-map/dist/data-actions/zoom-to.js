System.register(["jimu-core","jimu-arcgis"],(function(t,e){var r={},o={};return{setters:[function(t){r.AbstractDataAction=t.AbstractDataAction,r.DataLevel=t.DataLevel,r.DataSourceStatus=t.DataSourceStatus,r.MutableStoreManager=t.MutableStoreManager},function(t){o.loadArcGISJSAPIModules=t.loadArcGISJSAPIModules}],execute:function(){t((()=>{var t={62686:t=>{"use strict";t.exports=o},79244:t=>{"use strict";t.exports=r}},e={};function a(r){var o=e[r];if(void 0!==o)return o.exports;var n=e[r]={exports:{}};return t[r](n,n.exports,a),n.exports}a.d=(t,e)=>{for(var r in e)a.o(e,r)&&!a.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},a.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),a.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.p="";var n={};return a.p=window.jimuConfig.baseUrl,(()=>{"use strict";a.r(n),a.d(n,{default:()=>o});var t=a(79244),e=a(62686);var r=function(t,e,r,o){return new(r||(r=Promise))((function(a,n){function u(t){try{s(o.next(t))}catch(t){n(t)}}function i(t){try{s(o.throw(t))}catch(t){n(t)}}function s(t){var e;t.done?a(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(u,i)}s((o=o.apply(t,e||[])).next())}))};class o extends t.AbstractDataAction{isSupported(e,o){return r(this,void 0,void 0,(function*(){const r=this.getSupportedDataSets(e,o);return 1===r.length||r.length>=2&&o===t.DataLevel.Records}))}getSupportedDataSets(e,r){return e.filter((e=>{const o=e.dataSource;if(!o||o.getStatus()===t.DataSourceStatus.NotReady)return!1;if(!((null==o?void 0:o.supportSpatialInfo)&&(null==o?void 0:o.supportSpatialInfo())))return!1;if(r===t.DataLevel.Records){return this.getRecords(e,r).length>0}return r===t.DataLevel.DataSource&&!!(null==o?void 0:o.createJSAPILayerByDataSource)}))}getRecords(e,r){var o;let a=[];return r===t.DataLevel.DataSource?a=[]:r===t.DataLevel.Records&&(null===(o=e.records)||void 0===o?void 0:o.length)>0&&(a=e.records),a}getClonedFeatures(t,e,r){const o=this.getRecords(t,e).map((t=>function(t,e){let r=null;return t.clone?r=t.clone():(r=e.fromJSON(Object.assign({},t)),r.attributes=Object.assign({},t.attributes)),r}(t.feature,r)));return o}onExecute(o,a){return r(this,void 0,void 0,(function*(){var r;const n=yield(0,e.loadArcGISJSAPIModules)(["esri/Graphic"]),[u]=n,i=this.getSupportedDataSets(o,a),s={padding:{left:50,right:50,top:50,bottom:50}};if(1===i.length){const e=i[0],o={type:"zoom-to-graphics",features:this.getClonedFeatures(e,a,u),dataSourceId:(null===(r=e.dataSource)||void 0===r?void 0:r.id)||null,zoomToOption:s};t.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"zoomToFeatureActionValue.value",o)}else if(i.length>=2){const e=[];i.forEach((t=>{const r=this.getClonedFeatures(t,a,u);e.push(r)}));const r={type:"zoom-to-array-graphics",arrayFeatures:e,zoomToOption:s};t.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"zoomToFeatureActionValue.value",r)}return!0}))}}})(),n})())}}}));