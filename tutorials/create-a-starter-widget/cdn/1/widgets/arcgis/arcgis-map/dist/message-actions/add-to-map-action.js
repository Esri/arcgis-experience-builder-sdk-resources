System.register(["jimu-core","jimu-arcgis"],(function(e,t){var a={},r={};return{setters:[function(e){a.AbstractMessageAction=e.AbstractMessageAction,a.DataSourceTypes=e.DataSourceTypes,a.DataSourcesChangeType=e.DataSourcesChangeType,a.MessageType=e.MessageType,a.MutableStoreManager=e.MutableStoreManager,a.getAppStore=e.getAppStore},function(e){r.ADD_TO_MAP_DATA_ID_PREFIX=e.ADD_TO_MAP_DATA_ID_PREFIX,r.ActionType=e.ActionType,r.DataChangeStatus=e.DataChangeStatus,r.DataChangeType=e.DataChangeType,r.MapViewManager=e.MapViewManager}],execute:function(){e((()=>{"use strict";var e={26826:e=>{e.exports=r},48891:e=>{e.exports=a}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,n),i.exports}n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var i={};return(()=>{n.r(i),n.d(i,{default:()=>a});var e=n(48891),t=n(26826);class a extends e.AbstractMessageAction{filterMessageDescription(t){return t.messageType===e.MessageType.DataSourcesChange}filterMessage(e){return!0}onRemoveListen(t,a){var r;const n=(null===(r=e.MutableStoreManager.getInstance().getStateValue([this.widgetId]))||void 0===r?void 0:r.addToMapDatas)||{},i={};Object.entries(n).forEach((e=>{var t;(null===(t=e[1])||void 0===t?void 0:t.messageWidgetId)!==a&&(i[e[0]]=e[1])})),e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"addToMapDatas",i)}onExecute(a,r){var n;const i=this._getActiveViewId(this.widgetId,(0,e.getAppStore)().getState().jimuMapViewsInfo),s=this._getDefaultViewId(this.widgetId,(0,e.getAppStore)().getState().jimuMapViewsInfo),o=i||s,g=(null===(n=e.MutableStoreManager.getInstance().getStateValue([this.widgetId]))||void 0===n?void 0:n.addToMapDatas)||{};return a.dataSources.forEach((r=>{var n;const d=r;if(!d.supportSpatialInfo||!d.supportSpatialInfo())return;const p=i&&t.MapViewManager.getInstance().getJimuMapViewById(i);if((d.type===e.DataSourceTypes.SceneLayer||d.type===e.DataSourceTypes.SceneService)&&"2d"===(null===(n=null==p?void 0:p.view)||void 0===n?void 0:n.type))return;const u=`${t.ADD_TO_MAP_DATA_ID_PREFIX}messageAction_${this.widgetId}_${d.id}_`,c=`${u}???`,l=i?`${u}${i}`:c;s&&s===i&&g[c]&&e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,`addToMapDatas.${c}.dataChangeType`,t.DataChangeType.Remove),g[l]={mapWidgetId:this.widgetId,messageWidgetId:a.widgetId,jimuMapViewId:o,dataSourceId:d.id,type:t.ActionType.MessageAction,dataChangeType:a.changeType===e.DataSourcesChangeType.Remove?t.DataChangeType.Remove:t.DataChangeType.Create,dataChangeStatus:a.changeType===e.DataSourcesChangeType.Remove?t.DataChangeStatus.Fulfilled:t.DataChangeStatus.Pending,title:l}})),e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"addToMapDatas",g),Promise.resolve(!0)}_getActiveViewId(e,t){return Object.keys(t||{}).find((a=>t[a].mapWidgetId===e&&t[a].isActive))}_getDefaultViewId(e,t){return Object.keys(t||{}).find((a=>t[a].mapWidgetId===e))}}})(),i})())}}}));