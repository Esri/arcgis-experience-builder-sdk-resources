/*! For license information please see 1215.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[1215],{236:(t,e,s)=>{s.d(e,{V:()=>a});var i=s(9113);const a=({scale:t,status:e,icon:s,message:a})=>(0,i.h)("div",{class:"validation-container"},(0,i.h)("calcite-input-message",{icon:s,scale:t,status:e},a))},1215:(t,e,s)=>{s.r(e),s.d(e,{calcite_radio_button_group:()=>r});var i=s(9113),a=s(8773),o=s(8545),n=s(236);const r=class{constructor(t){(0,i.r)(this,t),this.calciteRadioButtonGroupChange=(0,i.c)(this,"calciteRadioButtonGroupChange",6),this.mutationObserver=(0,a.c)("mutation",(()=>this.passPropsToRadioButtons())),this.passPropsToRadioButtons=()=>{this.radioButtons=Array.from(this.el.querySelectorAll("calcite-radio-button")),this.selectedItem=Array.from(this.radioButtons).find((t=>t.checked))||null,this.radioButtons.length>0&&this.radioButtons.forEach((t=>{t.disabled=this.disabled||t.disabled,t.hidden=this.el.hidden,t.name=this.name,t.required=this.required,t.scale=this.scale}))},this.disabled=!1,this.layout="horizontal",this.name=void 0,this.required=!1,this.selectedItem=null,this.scale="m",this.status="idle",this.validationMessage=void 0,this.validationIcon=void 0,this.radioButtons=[]}handleHiddenChange(){this.passPropsToRadioButtons()}onDisabledChange(){this.passPropsToRadioButtons()}onLayoutChange(){this.passPropsToRadioButtons()}onScaleChange(){this.passPropsToRadioButtons()}connectedCallback(){this.passPropsToRadioButtons(),this.mutationObserver?.observe(this.el,{childList:!0,subtree:!0})}componentWillLoad(){(0,o.s)(this)}componentDidLoad(){(0,o.a)(this)}disconnectedCallback(){this.mutationObserver?.disconnect()}getFocusableRadioButton(){return this.radioButtons.find((t=>!t.disabled))??null}async setFocus(){return await(0,o.c)(this),this.selectedItem&&!this.selectedItem.disabled?this.selectedItem.setFocus():this.radioButtons.length>0?this.getFocusableRadioButton()?.setFocus():void 0}radioButtonChangeHandler(t){this.selectedItem=t.target,this.calciteRadioButtonGroupChange.emit()}render(){return(0,i.h)(i.H,{role:"radiogroup"},(0,i.h)("div",{class:"item-wrapper"},(0,i.h)("slot",null)),this.validationMessage?(0,i.h)(n.V,{icon:this.validationIcon,message:this.validationMessage,scale:this.scale,status:this.status}):null)}get el(){return(0,i.g)(this)}static get watchers(){return{hidden:["handleHiddenChange"],disabled:["onDisabledChange"],layout:["onLayoutChange"],scale:["onScaleChange"]}}};r.style=":host{display:flex;flex-direction:column}:host>.item-wrapper{display:flex;max-inline-size:100vw}:host([layout=horizontal])>.item-wrapper{flex-direction:row;flex-wrap:wrap}:host([layout=horizontal][scale=s])>.item-wrapper{column-gap:1rem}:host([layout=horizontal][scale=m])>.item-wrapper{column-gap:1.25rem}:host([layout=horizontal][scale=l])>.item-wrapper{column-gap:1.5rem}:host([layout=vertical])>.item-wrapper{flex-direction:column}:host([scale=s]) calcite-input-message{--calcite-input-message-spacing-value:calc(var(--calcite-spacing-xxs) * -1)}:host([scale=m]) calcite-input-message{--calcite-input-message-spacing-value:calc(var(--calcite-spacing-sm) * -1)}:host([scale=l]) calcite-input-message{--calcite-input-message-spacing-value:calc(var(--calcite-spacing-md) * -1)}.validation-container{display:flex;flex-direction:column;align-items:flex-start;align-self:stretch}:host([scale=m]) .validation-container,:host([scale=l]) .validation-container{padding-block-start:0.5rem}:host([scale=s]) .validation-container{padding-block-start:0.25rem}:host([hidden]){display:none}[hidden]{display:none}"},8545:(t,e,s)=>{s.d(e,{a:()=>r,b:()=>l,c:()=>c,s:()=>n});var i=s(9113);const a=new WeakMap,o=new WeakMap;function n(t){o.set(t,new Promise((e=>a.set(t,e))))}function r(t){a.get(t)()}function l(t){return o.get(t)}async function c(t){return await l(t),(0,i.f)(t),new Promise((t=>requestAnimationFrame((()=>t()))))}},8773:(t,e,s)=>{function i(t,e,s){const i=function(t){class e extends window.MutationObserver{constructor(t){super(t),this.observedEntry=[],this.callback=t}observe(t,e){return this.observedEntry.push({target:t,options:e}),super.observe(t,e)}unobserve(t){const e=this.observedEntry.filter((e=>e.target!==t));this.observedEntry=[],this.callback(super.takeRecords(),this),this.disconnect(),e.forEach((t=>this.observe(t.target,t.options)))}}return"intersection"===t?window.IntersectionObserver:"mutation"===t?e:window.ResizeObserver}(t);return new i(e,s)}s.d(e,{c:()=>i})}}]);