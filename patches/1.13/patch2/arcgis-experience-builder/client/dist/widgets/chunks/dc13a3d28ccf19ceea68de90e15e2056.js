"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[35605],{35605:(e,r,t)=>{t.r(r),t.d(r,{default:()=>y});var i=t(47817),s=(t(58574),t(11115)),a=t(89300),o=t(94882);function n(e){return i.ap.fromJSON(e).features.map((e=>e.geometry))}t(68700),t(72571);let l=class extends i.ao{constructor(e){super(e),this.directions=null,this.facilities=null,this.incidents=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routes=null}readFacilities(e){return n(e)}readIncidents(e){return n(e)}readPointBarriers(e,r){return n(r.barriers)}readPolylineBarriers(e){return n(e)}readPolygonBarriers(e){return n(e)}readRoutes(e){return(r=e).features.map((e=>{const t=i.O.fromJSON(r.spatialReference),s=i.an.fromJSON(e);return(0,i.H)(s.geometry)&&(s.geometry.spatialReference=t),s}));var r}};(0,i.Z)([(0,i._)({type:[o.c]})],l.prototype,"directions",void 0),(0,i.Z)([(0,i._)({type:[i.q]})],l.prototype,"facilities",void 0),(0,i.Z)([(0,i.ab)("facilities")],l.prototype,"readFacilities",null),(0,i.Z)([(0,i._)({type:[i.q]})],l.prototype,"incidents",void 0),(0,i.Z)([(0,i.ab)("incidents")],l.prototype,"readIncidents",null),(0,i.Z)([(0,i._)({type:[o.a]})],l.prototype,"messages",void 0),(0,i.Z)([(0,i._)({type:[i.q]})],l.prototype,"pointBarriers",void 0),(0,i.Z)([(0,i.ab)("pointBarriers",["barriers"])],l.prototype,"readPointBarriers",null),(0,i.Z)([(0,i._)({type:[i.v]})],l.prototype,"polylineBarriers",void 0),(0,i.Z)([(0,i.ab)("polylineBarriers")],l.prototype,"readPolylineBarriers",null),(0,i.Z)([(0,i._)({type:[i.x]})],l.prototype,"polygonBarriers",void 0),(0,i.Z)([(0,i.ab)("polygonBarriers")],l.prototype,"readPolygonBarriers",null),(0,i.Z)([(0,i._)({type:[i.an]})],l.prototype,"routes",void 0),(0,i.Z)([(0,i.ab)("routes")],l.prototype,"readRoutes",null),l=(0,i.Z)([(0,i.a0)("esri.tasks.support.ClosestFacilitySolveResult")],l);var u=l;const p=(0,o.o)({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},facilities:!0,incidents:!0,outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},returnRoutes:{name:"returnCFRoutes"},travelMode:!0});let c=class extends((0,o.b)(s.p)){constructor(e){super(e),this.url=null}solve(e,r){return async function(e,r,t){const n=[],l=[],c={},y={},d=(0,s.r)(e);return r.incidents&&r.incidents.features&&(0,o.l)(r.incidents.features,l,"incidents.features",c),r.facilities&&r.facilities.features&&(0,o.l)(r.facilities.features,l,"facilities.features",c),r.pointBarriers&&r.pointBarriers.features&&(0,o.l)(r.pointBarriers.features,l,"pointBarriers.features",c),r.polylineBarriers&&r.polylineBarriers.features&&(0,o.l)(r.polylineBarriers.features,l,"polylineBarriers.features",c),r.polygonBarriers&&r.polygonBarriers.features&&(0,o.l)(r.polygonBarriers.features,l,"polygonBarriers.features",c),(0,a.L)(l).then((e=>{for(const r in c){const t=c[r];n.push(r),y[r]=e.slice(t[0],t[1])}return(0,o.u)(y,n)?(0,o.d)(d.path):Promise.resolve({dontCheck:!0})})).then((e=>{("dontCheck"in e?e.dontCheck:e.hasZ)||(0,o.n)(y,n);for(const e in y)y[e].forEach(((t,i)=>{r.get(e)[i].geometry=t}));let s={query:{...d.query,f:"json",...p.toQueryParams(r)}};return t&&(s={...t,...s}),(0,i.U)(`${d.path}/solveClosestFacility`,s)})).then((e=>u.fromJSON(e.data)))}(this.url,e,r)}};(0,i.Z)([(0,i._)()],c.prototype,"url",void 0),c=(0,i.Z)([(0,i.a0)("esri.tasks.ClosestFacilityTask")],c);const y=c}}]);