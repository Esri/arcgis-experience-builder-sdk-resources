"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[32530],{32530:(e,t,i)=>{i.r(t),i.d(t,{arcgis_infographic_modal:()=>r});var n=i(30396),o=i(14298),s=i(57123);const r=class{constructor(e){(0,n.r)(this,e),this._idPrefix="arcgis-infographic-modal-",this.isOpen=!1,this.baseConfig=new s.B("modal",this,this.onUpdateUI),this._instanceId=o.E.generateId(this._idPrefix).id}onConfigChange(e,t){if(e&&"string"==typeof e&&o.A.hasText(e)){const i=JSON.parse(e),n=t&&o.A.hasText(t)?JSON.parse(t):null;this.baseConfig.updateConfig(i,n)}}onUpdateUI(){}setLocaleStrings(){}async componentWillLoad(){if(this.config){let e="object"==typeof this.config?JSON.stringify(this.config):this.config;this.onConfigChange(e,"")}}componentDidLoad(){this.baseConfig&&this.baseConfig.onComponentHasRendered()}componentDidUpdate(){this.baseConfig&&this.baseConfig.onComponentHasRendered()}render(){const{env:e,username:t,token:i,geoenrichmentUrl:o,sourceCountry:s,langCode:r}=this.baseConfig.config,{name:a,attributes:h,geometry:g,geography:c}=this.searchResultObj;return(0,n.h)("arcgis-infographic",{id:this.modalId,env:e,username:t,token:i,geoenrichmentUrl:o,portalUrl:this.portalUrl,portalOnlineGEProxy:this.portalOnlineGEProxy,locationName:a,locationAttributes:JSON.stringify(h),sourceCountry:s,options:JSON.stringify(this.infographicOptions),langCode:r,reportId:this.selectedReport,reportLocation:`${this.searchResultObj.lon},${this.searchResultObj.lat}`,reportgeometry:JSON.stringify(g),reportgeography:JSON.stringify(c)})}get el(){return(0,n.g)(this)}static get watchers(){return{config:["onConfigChange"]}}};r.style=":host{display:block}"}}]);