/*! For license information please see 6cdc45d4c846810714c6af7a0c62bd53.js.LICENSE.txt */
"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[71100],{58892:(e,t,s)=>{s.d(t,{a:()=>r,b:()=>n,c:()=>i,d:()=>o});const o=(0,s(27010).c)({typeKeywords:[],customParameters:[],analyzedLocationTypes:[],allowStoredAuth:!0,isSecured:null,checkAuth:!1}),r=o.state,i=o.state,n=o.state},71100:(e,t,s)=>{s.r(t),s.d(t,{arcgis_new_item_pages_service_scope:()=>a});var o=s(28384),r=s(76134),i=s(58892),n=s(90784);s(27010);const a=class{constructor(e){(0,o.r)(this,e),this.newItemUpdatePage=(0,o.c)(this,"newItemUpdatePage",7),this.developerPrivileges=void 0}async componentWillLoad(){var e;this.developerPrivileges=null!==(e=i.a.developerPrivileges)&&void 0!==e?e:await this.getDefaultPrivileges()}handleNext(){i.a.developerPrivileges=this.developerPrivileges,this.newItemUpdatePage.emit("itemProperties")}async getDefaultPrivileges(){return("Developer Subscription"===r.c.subscriptionInfo.type?n.b:n.o).map((e=>n.s[e]))}render(){return(0,o.h)(o.H,null,(0,o.h)("arcgis-service-scope",{user:r.c.user,developerPrivileges:this.developerPrivileges,onArcgisServiceScopeChange:e=>{this.developerPrivileges=e.detail}}))}};a.style=".section{margin-top:2rem}calcite-tile{pointer-events:none;width:100%}.content{margin-top:0.5rem}"},76134:(e,t,s)=>{s.d(t,{c:()=>r,o:()=>i});const o=(0,s(27010).c)({portal:null,user:null,api:4,scale:"m"}),r=o.state,i=o.onChange},90784:(e,t,s)=>{s.d(t,{a:()=>r,b:()=>a,d:()=>o,o:()=>n,r:()=>i,s:()=>c});const o=["apiKey","oauth"],r=["basemap","geocodingNotStored","routing","serviceArea","geocodingStored","optimizedRouting","closestFacility","locationAllocation","multiVehicleRouting","costMatrix","geoEnrichment"],i=["basemap"],n=["geocodingNotStored"],a=["geocodingNotStored","routing","serviceArea"],c={basemap:"portal:apikey:basemaps",geocodingNotStored:"premium:user:geocode:temporary",routing:"premium:user:networkanalysis:routing",serviceArea:"premium:user:networkanalysis:servicearea",geocodingStored:"premium:user:geocode:stored",optimizedRouting:"premium:user:networkanalysis:optimizedrouting",closestFacility:"premium:user:networkanalysis:closestfacility",locationAllocation:"premium:user:networkanalysis:locationallocation",multiVehicleRouting:"premium:user:networkanalysis:vehiclerouting",costMatrix:"premium:user:networkanalysis:origindestinationcostmatrix",geoEnrichment:"premium:user:geoenrichment"}},27010:(e,t,s)=>{s.d(t,{c:()=>a});var o=s(28384);const r=e=>!("isConnected"in e)||e.isConnected,i=((e,t)=>{let s;return(...e)=>{s&&clearTimeout(s),s=setTimeout((()=>{s=0,(e=>{for(let t of e.keys())e.set(t,e.get(t).filter(r))})(...e)}),2e3)}})(),n=e=>"function"==typeof e?e():e,a=(e,t)=>{const s=((e,t=((e,t)=>e!==t))=>{const s=n(e);let o=new Map(Object.entries(null!=s?s:{}));const r={dispose:[],get:[],set:[],reset:[]},i=()=>{var t;o=new Map(Object.entries(null!==(t=n(e))&&void 0!==t?t:{})),r.reset.forEach((e=>e()))},a=e=>(r.get.forEach((t=>t(e))),o.get(e)),c=(e,s)=>{const i=o.get(e);t(s,i,e)&&(o.set(e,s),r.set.forEach((t=>t(e,s,i))))},l="undefined"==typeof Proxy?{}:new Proxy(s,{get:(e,t)=>a(t),ownKeys:e=>Array.from(o.keys()),getOwnPropertyDescriptor:()=>({enumerable:!0,configurable:!0}),has:(e,t)=>o.has(t),set:(e,t,s)=>(c(t,s),!0)}),u=(e,t)=>(r[e].push(t),()=>{((e,t)=>{const s=e.indexOf(t);s>=0&&(e[s]=e[e.length-1],e.length--)})(r[e],t)});return{state:l,get:a,set:c,on:u,onChange:(t,s)=>{const o=u("set",((e,o)=>{e===t&&s(o)})),r=u("reset",(()=>s(n(e)[t])));return()=>{o(),r()}},use:(...e)=>{const t=e.reduce(((e,t)=>(t.set&&e.push(u("set",t.set)),t.get&&e.push(u("get",t.get)),t.reset&&e.push(u("reset",t.reset)),t.dispose&&e.push(u("dispose",t.dispose)),e)),[]);return()=>t.forEach((e=>e()))},dispose:()=>{r.dispose.forEach((e=>e())),i()},reset:i,forceUpdate:e=>{const t=o.get(e);r.set.forEach((s=>s(e,t,t)))}}})(e,t);return s.use((()=>{if("function"!=typeof o.g)return{};const e=new Map;return{dispose:()=>e.clear(),get:t=>{const s=(0,o.g)();s&&((e,t,s)=>{const o=e.get(t);o?o.includes(s)||o.push(s):e.set(t,[s])})(e,t,s)},set:t=>{const s=e.get(t);s&&e.set(t,s.filter(o.f)),i(e)},reset:()=>{e.forEach((e=>e.forEach(o.f))),i(e)}}})()),s}}}]);