"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[39918],{39918:(e,t,n)=>{n.r(t),n.d(t,{destroyContext:()=>b,dracoDecompressPointCloudData:()=>c,filterObbsForModifications:()=>u,filterObbsForModificationsSync:()=>E,initialize:()=>w,interpretObbModificationResults:()=>m,process:()=>a,setLegacySchema:()=>d,setModifications:()=>l,setModificationsSync:()=>y,test:()=>_});var r=n(47817);function o(e){return(0,r.a7)(`esri/libs/i3s/${e}`)}let s,i,f;async function a(e){await w();const t=[e.geometryBuffer];return{result:h(e,t),transferList:t}}async function c(e){var t;await w();const n=[e.geometryBuffer],{geometryBuffer:o}=e,s=o.byteLength,i=f._malloc(s),a=new Uint8Array(f.HEAPU8.buffer,i,s);a.set(new Uint8Array(o));const c=f.dracoDecompressPointCloudData(i,a.byteLength);if(f._free(i),c.error.length>0)throw`i3s.wasm: ${c.error}`;const u=(null==(t=c.featureIds)?void 0:t.length)>0?(0,r.d6)(c.featureIds):null,l=(0,r.d6)(c.positions);return u&&n.push(u.buffer),n.push(l.buffer),{result:{positions:l,featureIds:u},transferList:n}}async function u(e){await w(),E(e);const t={buffer:e.buffer};return{result:t,transferList:[t.buffer]}}async function l(e){await w(),y(e)}async function d(e){await w(),f.setLegacySchema(e.context,e.jsonSchema)}function b(e){p(e)}function y(e){const t=e.modifications,n=f._malloc(8*t.length),r=new Float64Array(f.HEAPU8.buffer,n,t.length);for(let e=0;e<t.length;++e)r[e]=t[e];f.setModifications(e.context,n,t.length,e.isGeodetic),f._free(n)}function h(e,t){if(!f)return null;const{context:n,localOrigin:o,globalTrafo:s,mbs:i,obb:a,elevationOffset:c,geometryBuffer:u,geometryDescriptor:l,indexToVertexProjector:d,vertexToRenderProjector:b}=e,y=f._malloc(u.byteLength),h=f._malloc(33*Float64Array.BYTES_PER_ELEMENT),m=new Uint8Array(f.HEAPU8.buffer,y,u.byteLength);m.set(new Uint8Array(u));const E=new Float64Array(f.HEAPU8.buffer,h,33);g(E,o);let p=E.byteOffset+3*E.BYTES_PER_ELEMENT,w=new Float64Array(E.buffer,p);g(w,s),p+=16*E.BYTES_PER_ELEMENT,w=new Float64Array(E.buffer,p),g(w,i),p+=4*E.BYTES_PER_ELEMENT,(0,r.H)(a)&&(w=new Float64Array(E.buffer,p),g(w,a.center),p+=3*E.BYTES_PER_ELEMENT,w=new Float64Array(E.buffer,p),g(w,a.halfSize),p+=3*E.BYTES_PER_ELEMENT,w=new Float64Array(E.buffer,p),g(w,a.quaternion));const _=l,A={isDraco:!1,isLegacy:!1,color:e.layouts.some((e=>e.some((e=>"color"===e.name)))),normal:e.needNormals&&e.layouts.some((e=>e.some((e=>"normalCompressed"===e.name)))),uv0:e.layouts.some((e=>e.some((e=>"uv0"===e.name)))),uvRegion:e.layouts.some((e=>e.some((e=>"uvRegion"===e.name)))),featureIndex:_.featureIndex},L=f.process(n,!!e.obb,y,m.byteLength,_,A,h,c,d,b,e.normalReferenceFrame);if(f._free(h),f._free(y),L.error.length>0)throw`i3s.wasm: ${L.error}`;if(L.discarded)return null;const P=L.componentOffsets.length>0?(0,r.d6)(L.componentOffsets):null,T=L.featureIds.length>0?(0,r.d6)(L.featureIds):null,I=(0,r.d6)(L.interleavedVertedData).buffer,F=1===L.indicesType?(0,r.d6)(new Uint16Array(L.indices.buffer,L.indices.byteOffset,L.indices.byteLength/2)):(0,r.d6)(new Uint32Array(L.indices.buffer,L.indices.byteOffset,L.indices.byteLength/4)),M=(0,r.d6)(L.positions),O=1===L.positionIndicesType?(0,r.d6)(new Uint16Array(L.positionIndices.buffer,L.positionIndices.byteOffset,L.positionIndices.byteLength/2)):(0,r.d6)(new Uint32Array(L.positionIndices.buffer,L.positionIndices.byteOffset,L.positionIndices.byteLength/4)),x={layout:e.layouts[0],interleavedVertexData:I,indices:F,hasColors:L.hasColors,hasModifications:L.hasModifications,positionData:{data:M,indices:O}};return T&&t.push(T.buffer),P&&t.push(P.buffer),t.push(I),t.push(F.buffer),t.push(M.buffer),t.push(O.buffer),{componentOffsets:P,featureIds:T,transformedGeometry:x,obb:L.obb}}function m(e){return 0===e?0:1===e?1:2===e?2:3}function E(e){const{context:t,buffer:n}=e,r=f._malloc(n.byteLength),o=n.byteLength/Float64Array.BYTES_PER_ELEMENT,s=new Float64Array(f.HEAPU8.buffer,r,o),i=new Float64Array(n);s.set(i),f.filterOBBs(t,r,o),i.set(s),f._free(r)}function p(e){f&&f.destroy(e)}function g(e,t){for(let n=0;n<t.length;++n)e[n]=t[n]}function w(){return f?Promise.resolve():(i||(i=(s||(s=new Promise((e=>n.e(82400).then(n.bind(n,82400)).then((function(e){return e.i})).then((({default:t})=>{const n=t({locateFile:o,onRuntimeInitialized:()=>e(n)});delete n.then})))).catch((e=>Promise.reject(e)))),s).then((e=>{f=e,i=null}))),i)}n(58574),n(68700);const _={transform:h,destroy:p}}}]);