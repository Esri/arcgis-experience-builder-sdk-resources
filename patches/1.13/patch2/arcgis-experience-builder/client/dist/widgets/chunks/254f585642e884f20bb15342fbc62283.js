"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[59039],{32226:(e,t,r)=>{r.d(t,{a:()=>n});var s=r(47817),i=(r(58574),r(99884));const n=e=>{let t=class extends e{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,t){return t.capabilities&&t.capabilities.indexOf("Tilemap")>-1?new i.j({layer:this}):null}};return(0,s.Z)([(0,s._)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,s.Z)([(0,s._)()],t.prototype,"minScale",void 0),(0,s.Z)([(0,s.ab)("service","minScale")],t.prototype,"readMinScale",null),(0,s.Z)([(0,s._)()],t.prototype,"maxScale",void 0),(0,s.Z)([(0,s.ab)("service","maxScale")],t.prototype,"readMaxScale",null),(0,s.Z)([(0,s._)({type:s.O})],t.prototype,"spatialReference",void 0),(0,s.Z)([(0,s._)({readOnly:!0})],t.prototype,"supportsBlankTile",null),(0,s.Z)([(0,s._)(i.r)],t.prototype,"tileInfo",void 0),(0,s.Z)([(0,s._)()],t.prototype,"tilemapCache",void 0),(0,s.Z)([(0,s.ab)("service","tilemapCache",["capabilities"])],t.prototype,"readTilemapCache",null),(0,s.Z)([(0,s._)()],t.prototype,"version",void 0),t=(0,s.Z)([(0,s.a0)("esri.layers.mixins.ArcGISCachedService")],t),t}},36550:(e,t,r)=>{r.r(t),r.d(t,{default:()=>f});var s=r(47817),i=(r(58574),r(7390)),n=r(21693),a=r(3467),l=r(50542),o=r(19904),u=r(32226),c=r(89289);r(68700),r(69764),r(18608),r(29156),r(64646),r(72304),r(99884),r(18847),r(89684),r(77639),r(18204);const h=s.S.getLogger("esri.core.workers.WorkerHandle");class d{constructor(e,t,r,s={}){this._mainMethod=t,this._listeners=[],this._promise=(0,c.p)(e,{...s,scheduler:r}).then((e=>{if(void 0===this._thread){this._thread=e,this._promise=null,s.hasInitialize&&this.broadcast({},"initialize");for(const e of this._listeners)this._connectListener(e)}else e.close()})),this._promise.catch((t=>h.error(`Failed to initialize ${e} worker: ${t}`)))}on(e,t){const r={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(r),this._connectListener(r),(0,s.ax)((()=>{r.removed=!0,(0,s.ay)(this._listeners,r),this._thread&&(0,s.H)(r.threadHandle)&&r.threadHandle.remove()}))}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,r){if(this._thread){const s=this.getTransferList(t,e);return this._thread.invoke(e,t,{transferList:s,signal:r})}return this._promise?this._promise.then((()=>((0,s.ah)(r),this.invokeMethod(e,t,r)))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then((()=>{})):this._promise?this._promise.then((()=>this.broadcast(e,t))):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then((t=>{e.removed||(e.threadHandle=t)}))}}class p extends d{constructor(e){super("LercWorker","_decode",e,{strategy:"dedicated"}),this.scheduler=e}decode(e,t,r){return e&&0!==e.byteLength?this.invoke({buffer:e,options:t},r):Promise.resolve(null)}getTransferList(e){return[e.buffer]}}const m=new Map,g=s.S.getLogger("esri.layers.ElevationLayer");let y=class extends((0,u.a)((0,l.p)((0,a.l)((0,o.u)((0,i.l)(i.b)))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=function(e){let t=m.get(e);return t||(t={instance:new p(e),ref:0},m.set(e,t)),++t.ref,t.instance}()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){(function(e){if(null==e)return;const t=e.scheduler,r=m.get(t);r&&--r.ref<=0&&(r.instance.destroy(),m.delete(t))})(this._lercDecoder),this._lercDecoder=null}set minScale(e){this.constructed&&g.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)}get minScale(){}set maxScale(e){this.constructed&&g.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)}get maxScale(){}readVersion(e,t){let r=t.currentVersion;return r||(r=9.3),r}load(e){const t=(0,s.H)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new s.s("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).then((()=>this._fetchImageService(t)),(()=>this._fetchImageService(t)))),Promise.resolve(this)}fetchTile(e,t,r,i){const n=(0,s.H)((i=i||{signal:null}).signal)?i.signal:i.signal=(0,s.az)().signal,a={responseType:"array-buffer",signal:n},l={noDataValue:i.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,t,r,i))).then((()=>(0,s.U)(this.getTileUrl(e,t,r),a))).then((e=>this._lercDecoder.decode(e.data,l,n))).then((e=>({values:e.pixelData,width:e.width,height:e.height,maxZError:e.fileInfo.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue})))}getTileUrl(e,t,r){const i=!this.tilemapCache&&this.supportsBlankTile,n=(0,s.aA)({...this.parsedUrl.query,blankTile:!i&&null});return`${this.parsedUrl.path}/tile/${e}/${t}/${r}${n?"?"+n:""}`}async queryElevation(e,t){const{ElevationQuery:i}=await Promise.all([r.e(74970),r.e(19601),r.e(31154)]).then(r.bind(r,31154));return(0,s.ah)(t),(new i).query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:i}=await Promise.all([r.e(74970),r.e(19601),r.e(31154)]).then(r.bind(r,31154));return(0,s.ah)(t),(new i).createSampler(this,e,t)}_fetchTileAvailability(e,t,r,s){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,r,s):Promise.resolve("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},r=await(0,s.U)(this.parsedUrl.path,t);r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl})}};(0,s.Z)([(0,s._)({json:{read:{source:"copyrightText"}}})],y.prototype,"copyright",void 0),(0,s.Z)([(0,s._)({readOnly:!0,type:n.v})],y.prototype,"heightModelInfo",void 0),(0,s.Z)([(0,s._)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],y.prototype,"path",void 0),(0,s.Z)([(0,s._)({type:["show","hide"]})],y.prototype,"listMode",void 0),(0,s.Z)([(0,s._)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],y.prototype,"minScale",null),(0,s.Z)([(0,s._)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],y.prototype,"maxScale",null),(0,s.Z)([(0,s._)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],y.prototype,"opacity",void 0),(0,s.Z)([(0,s._)({type:["ArcGISTiledElevationServiceLayer"]})],y.prototype,"operationalLayerType",void 0),(0,s.Z)([(0,s._)()],y.prototype,"sourceJSON",void 0),(0,s.Z)([(0,s._)({json:{read:!1},value:"elevation",readOnly:!0})],y.prototype,"type",void 0),(0,s.Z)([(0,s._)(a.f)],y.prototype,"url",void 0),(0,s.Z)([(0,s._)()],y.prototype,"version",void 0),(0,s.Z)([(0,s.ab)("version",["currentVersion"])],y.prototype,"readVersion",null),y=(0,s.Z)([(0,s.a0)("esri.layers.ElevationLayer")],y);const f=y},21693:(e,t,r)=>{r.d(t,{v:()=>h});var s,i=r(47817),n=(r(58574),r(69764));const a=(0,i.aL)()({orthometric:"gravity-related-height",gravity_related_height:"gravity-related-height",ellipsoidal:"ellipsoidal"}),l=a.jsonValues.slice();(0,i.aM)(l,"orthometric");const o=(0,i.aL)()({meter:"meters",foot:"feet","us-foot":"us-feet","clarke-foot":"clarke-feet","clarke-yard":"clarke-yards","clarke-link":"clarke-links","sears-yard":"sears-yards","sears-foot":"sears-feet","sears-chain":"sears-chains","benoit-1895-b-chain":"benoit-1895-b-chains","indian-yard":"indian-yards","indian-1937-yard":"indian-1937-yards","gold-coast-foot":"gold-coast-feet","sears-1922-truncated-chain":"sears-1922-truncated-chains","50-kilometers":"50-kilometers","150-kilometers":"150-kilometers"});let u=s=class extends i.ao{constructor(e){super(e),this.heightModel="gravity-related-height",this.heightUnit="meters",this.vertCRS=null}writeHeightModel(e,t,r){return a.write(e,t,r)}readHeightModel(e,t,r){return a.read(e)||(r&&r.messages&&r.messages.push(function(e,t){return new i.aN("height-model:unsupported",`Height model of value '${e}' is not supported`,t)}(e,{context:r})),null)}readHeightUnit(e,t,r){return o.read(e)||(r&&r.messages&&r.messages.push(c(e,{context:r})),null)}readHeightUnitService(e,t,r){return(0,n.K)(e)||o.read(e)||(r&&r.messages&&r.messages.push(c(e,{context:r})),null)}readVertCRS(e,t){return t.vertCRS||t.ellipsoid||t.geoid}clone(){return new s({heightModel:this.heightModel,heightUnit:this.heightUnit,vertCRS:this.vertCRS})}equals(e){return!!e&&(this===e||this.heightModel===e.heightModel&&this.heightUnit===e.heightUnit&&this.vertCRS===e.vertCRS)}static deriveUnitFromSR(e,t){const r=(0,n.Y)(t);return new s({heightModel:e.heightModel,heightUnit:r,vertCRS:e.vertCRS})}write(e,t){return t={origin:"web-scene",...t},super.write(e,t)}static fromJSON(e){if(!e)return null;const t=new s;return t.read(e,{origin:"web-scene"}),t}};function c(e,t){return new i.aN("height-unit:unsupported",`Height unit of value '${e}' is not supported`,t)}(0,i.Z)([(0,i._)({type:a.apiValues,constructOnly:!0,json:{origins:{"web-scene":{type:l,default:"ellipsoidal"}}}})],u.prototype,"heightModel",void 0),(0,i.Z)([(0,i.aj)("web-scene","heightModel")],u.prototype,"writeHeightModel",null),(0,i.Z)([(0,i.ab)(["web-scene","service"],"heightModel")],u.prototype,"readHeightModel",null),(0,i.Z)([(0,i._)({type:o.apiValues,constructOnly:!0,json:{origins:{"web-scene":{type:o.jsonValues,write:o.write}}}})],u.prototype,"heightUnit",void 0),(0,i.Z)([(0,i.ab)("web-scene","heightUnit")],u.prototype,"readHeightUnit",null),(0,i.Z)([(0,i.ab)("service","heightUnit")],u.prototype,"readHeightUnitService",null),(0,i.Z)([(0,i._)({type:String,constructOnly:!0,json:{origins:{"web-scene":{write:!0}}}})],u.prototype,"vertCRS",void 0),(0,i.Z)([(0,i.ab)("service","vertCRS",["vertCRS","ellipsoid","geoid"])],u.prototype,"readVertCRS",null),u=s=(0,i.Z)([(0,i.a0)("esri.geometry.HeightModelInfo")],u);var h=u},77639:(e,t,r)=>{r.d(t,{e:()=>i});var s=r(18204);class i{constructor(e,t){this._storage=new s.i,this._storage.maxSize=e,t&&this._storage.registerRemoveFunc("",t)}put(e,t,r){this._storage.put(e,t,r,1)}pop(e){return this._storage.pop(e)}get(e){return this._storage.get(e)}clear(){this._storage.clearAll()}destroy(){this._storage.destroy()}get maxSize(){return this._storage.maxSize}set maxSize(e){this._storage.maxSize=e}}},18608:(e,t,r)=>{r.d(t,{d:()=>p,i:()=>l,r:()=>n});var s=r(47817);r(58574);const i={milliseconds:{getter:"getMilliseconds",setter:"setMilliseconds",multiplier:1},seconds:{getter:"getSeconds",setter:"setSeconds",multiplier:1},minutes:{getter:"getMinutes",setter:"setMinutes",multiplier:1},hours:{getter:"getHours",setter:"setHours",multiplier:1},days:{getter:"getDate",setter:"setDate",multiplier:1},weeks:{getter:"getDate",setter:"setDate",multiplier:7},months:{getter:"getMonth",setter:"setMonth",multiplier:1},years:{getter:"getFullYear",setter:"setFullYear",multiplier:1},decades:{getter:"getFullYear",setter:"setFullYear",multiplier:10},centuries:{getter:"getFullYear",setter:"setFullYear",multiplier:100}},n=(0,s.aL)()({esriTimeUnitsMilliseconds:"milliseconds",esriTimeUnitsSeconds:"seconds",esriTimeUnitsMinutes:"minutes",esriTimeUnitsHours:"hours",esriTimeUnitsDays:"days",esriTimeUnitsWeeks:"weeks",esriTimeUnitsMonths:"months",esriTimeUnitsYears:"years",esriTimeUnitsDecades:"decades",esriTimeUnitsCenturies:"centuries",esriTimeUnitsUnknown:null});function a(e,t,r){const s=new Date(e.getTime());if(t&&r){const e=i[r],{getter:n,setter:a,multiplier:l}=e;s[a](s[n]()+t*l)}return s}const l={milliseconds:1,seconds:1e3,minutes:6e4,hours:36e5,days:864e5,weeks:6048e5,months:26784e5,years:31536e6,decades:31536e7,centuries:31536e8};function o(e,t){switch(t){case"milliseconds":return new Date(e.getTime());case"seconds":return new Date(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds());case"minutes":return new Date(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes());case"hours":return new Date(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours());case"days":return new Date(e.getFullYear(),e.getMonth(),e.getDate());case"weeks":return new Date(e.getFullYear(),e.getMonth(),e.getDate()-e.getDay());case"months":return new Date(e.getFullYear(),e.getMonth(),1);case"years":return new Date(e.getFullYear(),0,1);case"decades":return new Date(e.getFullYear()-e.getFullYear()%10,0,1);case"centuries":return new Date(e.getFullYear()-e.getFullYear()%100,0,1);default:return null}}var u;let c=u=class extends s.ao{constructor(e){super(e),this.end=null,this.start=null}static get allTime(){return h}static get empty(){return d}readEnd(e,t){return null!=t.end?new Date(t.end):null}writeEnd(e,t){t.end=e?e.getTime():null}get isAllTime(){return this.equals(u.allTime)}get isEmpty(){return this.equals(u.empty)}readStart(e,t){return null!=t.start?new Date(t.start):null}writeStart(e,t){t.start=e?e.getTime():null}clone(){return new u({end:this.end,start:this.start})}expandTo(e){if(this.isEmpty||this.isAllTime)return this.clone();const t=this.start?o(this.start,e):null,r=this.end?a(o(this.end,e),1,e):null;return new u({start:t,end:r})}intersection(e){var t,r,s,i,n,a,l,o;if(!e)return this.clone();if(this.isEmpty||e.isEmpty)return u.empty;if(this.isAllTime)return e.clone();if(e.isAllTime)return this.clone();const c=null!=(t=null==(r=this.start)?void 0:r.getTime())?t:-1/0,h=null!=(s=null==(i=this.end)?void 0:i.getTime())?s:1/0,d=null!=(n=null==(a=e.start)?void 0:a.getTime())?n:-1/0,p=null!=(l=null==(o=e.end)?void 0:o.getTime())?l:1/0;let m,g;if(d>=c&&d<=h?m=d:c>=d&&c<=p&&(m=c),h>=d&&h<=p?g=h:p>=c&&p<=h&&(g=p),!isNaN(m)&&!isNaN(g)){const e=new u;return e.start=m===-1/0?null:new Date(m),e.end=g===1/0?null:new Date(g),e}return u.empty}offset(e,t){if(this.isEmpty||this.isAllTime)return this.clone();const r=new u,{start:s,end:i}=this;return s&&(r.start=a(s,e,t)),i&&(r.end=a(i,e,t)),r}equals(e){if(!e)return!1;const t=this.start?this.start.getTime():this.start,r=this.end?this.end.getTime():this.end,s=e.start?e.start.getTime():e.start,i=e.end?e.end.getTime():e.end;return t===s&&r===i}union(e){if(!e||e.isEmpty)return this.clone();if(this.isEmpty)return e.clone();if(this.isAllTime||e.isAllTime)return h.clone();const t=this.start&&e.start?new Date(Math.min(this.start.getTime(),e.start.getTime())):null,r=this.end&&e.end?new Date(Math.max(this.end.getTime(),e.end.getTime())):null;return new u({start:t,end:r})}};(0,s.Z)([(0,s._)({type:Date,json:{write:{allowNull:!0}}})],c.prototype,"end",void 0),(0,s.Z)([(0,s.ab)("end")],c.prototype,"readEnd",null),(0,s.Z)([(0,s.aj)("end")],c.prototype,"writeEnd",null),(0,s.Z)([(0,s._)({readOnly:!0,json:{read:!1}})],c.prototype,"isAllTime",null),(0,s.Z)([(0,s._)({readOnly:!0,json:{read:!1}})],c.prototype,"isEmpty",null),(0,s.Z)([(0,s._)({type:Date,json:{write:{allowNull:!0}}})],c.prototype,"start",void 0),(0,s.Z)([(0,s.ab)("start")],c.prototype,"readStart",null),(0,s.Z)([(0,s.aj)("start")],c.prototype,"writeStart",null),c=u=(0,s.Z)([(0,s.a0)("esri.TimeExtent")],c);const h=new c,d=new c({start:void 0,end:void 0});var p=c},69764:(e,t,r)=>{r.d(t,{E:()=>l,G:()=>Z,I:()=>T,K:()=>M,L:()=>x,Q:()=>O,R:()=>b,T:()=>k,V:()=>B,Y:()=>D,a:()=>n,b:()=>o,c:()=>a,l:()=>c,u:()=>u}),r(58574);var s=r(47817);function i(e){return new s.O({wkt:`GEOCCS["Spherical geocentric",\n    DATUM["Not specified",\n      SPHEROID["Sphere",${e.radius},0]],\n    PRIMEM["Greenwich",0.0,\n      AUTHORITY["EPSG","8901"]],\n    UNIT["m",1.0],\n    AXIS["Geocentric X",OTHER],\n    AXIS["Geocentric Y",EAST],\n    AXIS["Geocentric Z",NORTH]\n  ]`})}const n=i(s.aW),a=i(s.aU),l=i(s.aV),o=new s.O({wkt:`GEOCCS["WGS 84",\n  DATUM["WGS_1984",\n    SPHEROID["WGS 84",${s.aW.radius},298.257223563,\n      AUTHORITY["EPSG","7030"]],\n    AUTHORITY["EPSG","6326"]],\n  PRIMEM["Greenwich",0,\n    AUTHORITY["EPSG","8901"]],\n  UNIT["m",1.0,\n    AUTHORITY["EPSG","9001"]],\n  AXIS["Geocentric X",OTHER],\n  AXIS["Geocentric Y",OTHER],\n  AXIS["Geocentric Z",NORTH],\n  AUTHORITY["EPSG","4978"]\n]`});function u(e){return(0,s.aZ)(e)?s.aU:(0,s.a_)(e)?s.aV:s.aW}const c=39.37,h=s.aW.radius*Math.PI/200,d=/UNIT\[([^\]]+)\]\]$/i,p=s.a$,m=/UNIT\[([^\]]+)\]/i,g=new Set([4261,4305,4807,4810,4811,4812,4816,4819,4821,4901,4902,37225,104139,104140]),y=(0,s.aL)()({meter:"meters",foot:"feet",foot_us:"us-feet",foot_clarke:"clarke-feet",yard_clarke:"clarke-yards",link_clarke:"clarke-links",yard_sears:"sears-yards",foot_sears:"sears-feet",chain_sears:"sears-chains",chain_benoit_1895_b:"benoit-1895-b-chains",yard_indian:"indian-yards",yard_indian_1937:"indian-1937-yards",foot_gold_coast:"gold-coast-feet",chain_sears_1922_truncated:"sears-1922-truncated-chains","50_kilometers":"50-kilometers","150_kilometers":"150-kilometers"}),f=e=>e*e,v=e=>e*e*e,w={length:{baseUnit:"meters",units:{millimeters:{inBaseUnits:.001},centimeters:{inBaseUnits:.01},decimeters:{inBaseUnits:.1},meters:{inBaseUnits:1},kilometers:{inBaseUnits:1e3},inches:{inBaseUnits:.0254},feet:{inBaseUnits:.3048},yards:{inBaseUnits:.9144},miles:{inBaseUnits:1609.344},"nautical-miles":{inBaseUnits:1852},"us-feet":{inBaseUnits:1200/3937}}},area:{baseUnit:"square-meters",units:{"square-millimeters":{inBaseUnits:f(.001)},"square-centimeters":{inBaseUnits:f(.01)},"square-decimeters":{inBaseUnits:f(.1)},"square-meters":{inBaseUnits:1},"square-kilometers":{inBaseUnits:f(1e3)},"square-inches":{inBaseUnits:f(.0254)},"square-feet":{inBaseUnits:f(.3048)},"square-yards":{inBaseUnits:f(.9144)},"square-miles":{inBaseUnits:f(1609.344)},"square-us-feet":{inBaseUnits:f(1200/3937)},acres:{inBaseUnits:.0015625*f(1609.344)},ares:{inBaseUnits:100},hectares:{inBaseUnits:1e4}}},volume:{baseUnit:"liters",units:{liters:{inBaseUnits:1},"cubic-millimeters":{inBaseUnits:1e3*v(.001)},"cubic-centimeters":{inBaseUnits:1e3*v(.01)},"cubic-decimeters":{inBaseUnits:1e3*v(.1)},"cubic-meters":{inBaseUnits:1e3},"cubic-kilometers":{inBaseUnits:1e3*v(1e3)},"cubic-inches":{inBaseUnits:1e3*v(.0254)},"cubic-feet":{inBaseUnits:1e3*v(.3048)},"cubic-yards":{inBaseUnits:1e3*v(.9144)},"cubic-miles":{inBaseUnits:1e3*v(1609.344)}}},angle:{baseUnit:"radians",units:{radians:{inBaseUnits:1},degrees:{inBaseUnits:Math.PI/180}}}},S=function(){const e={};for(const t in w)for(const r in w[t].units)e[r]=t;return e}();function _(e){const t=S[e];if(t)return t;throw new Error("unknown measure")}function U(e,t=null){return t=t||_(e),w[t].baseUnit===e}function T(e,t,r){if(t===r)return e;const s=_(t);if(s!==_(r))throw new Error("incompatible units");const i=U(t,s)?e:function(e,t,r){return e*w[r].units[t].inBaseUnits}(e,t,s);return U(r,s)?i:function(e,t,r){return e/w[r].units[t].inBaseUnits}(i,r,s)}function b(e,t,r){return T(e,t,"meters")/(r*Math.PI/180)}function M(e){return y.fromJSON(e.toLowerCase())||null}function k(e){if(e&&"object"==typeof e&&!(0,s.b0)(e))return 1;const t=Z(e);return t>1e5?1:t}function D(e){return Z(e)>=(e instanceof s.O?(t=e,t&&((0,s.aX)(t)||t===a)?s.aU:t&&((0,s.aY)(t)||t===l)?s.aV:s.aW).metersPerDegree:1e5)?"meters":x(e);var t}function Z(e,t=s.aW.metersPerDegree){return function(e,t=!1){let r,i,n=null;if(null!=e&&("object"==typeof e?(r=e.wkid,i=e.wkt):"number"==typeof e?r=e:"string"==typeof e&&(i=e)),r){if((0,s.aZ)(r))return s.aU.metersPerDegree;if((0,s.a_)(r))return s.aV.metersPerDegree;n=p.values[p[r]],!n&&t&&g.has(r)&&(n=h)}else if(i)if(-1!==i.search(/^PROJCS/i)){const e=d.exec(i);e&&e[1]&&(n=parseFloat(e[1].split(",")[1]))}else if(-1!==i.search(/^GEOCCS/i)){const e=m.exec(i);e&&e[1]&&(n=parseFloat(e[1].split(",")[1]))}return n}(e,!0)||t}function x(e){let t,r,s=null;if(null!=e&&("object"==typeof e?(t=e.wkid,r=e.wkt):"number"==typeof e?t=e:"string"==typeof e&&(r=e)),t)s=p.units[p[t]];else if(r&&-1!==r.search(/^PROJCS/i)){let e=d.exec(r);e&&e[1]&&(e=/[\\"\\']{1}([^\\"\\']+)/.exec(e[1]),s=e&&e[1])}return s?M(s):null}const I={esriAcres:"acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-feet",esriSquareInches:"square-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-miles",esriSquareMillimeters:"square-millimeters",esriSquareUsFeet:"square-us-feet",esriSquareYards:"square-yards"},E={esriCentimeters:"centimeters",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriYards:"yards"},O=(0,s.aL)()(I),B=(0,s.aL)()(E);(0,s.aL)()({...I,...E})}}]);