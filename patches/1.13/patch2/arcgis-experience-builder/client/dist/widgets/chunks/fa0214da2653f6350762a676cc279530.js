"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[26576],{26576:(e,t,r)=>{r.r(t),r.d(t,{default:()=>A});var n=r(47817),s=(r(58574),r(11115));function o(e){return{geometryType:(0,n.ar)(e[0]),geometries:e.map((e=>e.toJSON()))}}function i(e,t,r){const s=(0,n.as)(t);return e.map((e=>{const t=s.fromJSON(e);return t.spatialReference=r,t}))}r(68700);const a=new n.aq({MGRS:"mgrs",USNG:"usng",UTM:"utm",GeoRef:"geo-ref",GARS:"gars",DMS:"dms",DDM:"ddm",DD:"dd"}),l=new n.aq({109006:"centimeters",9102:"decimal-degrees",109005:"decimeters",9002:"feet",109009:"inches",9036:"kilometers",9001:"meters",9035:"miles",109007:"millimeters",109012:"nautical-miles",9096:"yards"});let u=class extends n.ao{constructor(e){super(e),this.deviationUnit=null,this.geometries=null,this.maxDeviation=null}};(0,n.Z)([(0,n._)({type:String,json:{write:!0}})],u.prototype,"deviationUnit",void 0),(0,n.Z)([(0,n._)({json:{read:{reader:e=>e?e.map((e=>(0,n.J)(e))):null},write:{writer:(e,t)=>{t.geometries=e.map((e=>e.toJSON()))}}}})],u.prototype,"geometries",void 0),(0,n.Z)([(0,n._)({type:Number,json:{write:!0}})],u.prototype,"maxDeviation",void 0),u=(0,n.Z)([(0,n.a0)("esri.tasks.support.GeneralizeParameters")],u),u.from=(0,n.bo)(u);var c=u;const f=new n.aq({preserveShape:"preserve-shape"});let p=class extends n.ao{constructor(e){super(e),this.calculationType=null,this.geodesic=null,this.lengthUnit=null,this.polylines=null}};(0,n.Z)([(0,n._)({type:String,json:{write:!0}})],p.prototype,"calculationType",void 0),(0,n.Z)([(0,n._)({type:Boolean,json:{write:!0}})],p.prototype,"geodesic",void 0),(0,n.Z)([(0,n._)({json:{write:!0}})],p.prototype,"lengthUnit",void 0),(0,n.Z)([(0,n._)({type:[n.v],json:{read:{reader:e=>e?e.map((e=>(0,n.J)(e))):null},write:{writer:(e,t)=>{t.polylines=e.map((e=>e.toJSON()))}}}})],p.prototype,"polylines",void 0),p=(0,n.Z)([(0,n.a0)("esri.tasks.support.LengthsParameters")],p),p.from=(0,n.bo)(p);var N=p;const y=new n.aq({esriGeometryOffsetBevelled:"bevelled",esriGeometryOffsetMitered:"mitered",esriGeometryOffsetRounded:"rounded"}),m=new n.aq({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});let _=class extends n.ao{constructor(e){super(e),this.bevelRatio=null,this.geometries=null,this.offsetDistance=null,this.offsetHow=null,this.offsetUnit=null}};(0,n.Z)([(0,n._)({type:Number,json:{write:!0}})],_.prototype,"bevelRatio",void 0),(0,n.Z)([(0,n._)({json:{read:{reader:e=>e?e.map((e=>(0,n.J)(e))):null},write:{writer:(e,t)=>{t.geometries=e.map((e=>e.toJSON()))}}}})],_.prototype,"geometries",void 0),(0,n.Z)([(0,n._)({type:Number,json:{write:!0}})],_.prototype,"offsetDistance",void 0),(0,n.Z)([(0,n._)({type:String,json:{write:!0}})],_.prototype,"offsetHow",void 0),(0,n.Z)([(0,n._)({type:String,json:{write:!0}})],_.prototype,"offsetUnit",void 0),_=(0,n.Z)([(0,n.a0)("esri.tasks.support.OffsetParameters")],_),_.from=(0,n.bo)(_);var g=_;let S=class extends n.ao{constructor(e){super(e),this.geometries=null,this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map((function(e){return e.toJSON()})),t=this.geometries[0],r={};return r.outSR=this.outSpatialReference.wkid||JSON.stringify(this.outSpatialReference.toJSON()),r.inSR=t.spatialReference.wkid||JSON.stringify(t.spatialReference.toJSON()),r.geometries=JSON.stringify({geometryType:(0,n.ar)(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),null!=this.transformForward&&(r.transformForward=this.transformForward),r}};(0,n.Z)([(0,n._)()],S.prototype,"geometries",void 0),(0,n.Z)([(0,n._)({json:{read:{source:"outSR"}}})],S.prototype,"outSpatialReference",void 0),(0,n.Z)([(0,n._)()],S.prototype,"transformation",void 0),(0,n.Z)([(0,n._)()],S.prototype,"transformForward",void 0),S=(0,n.Z)([(0,n.a0)("esri.tasks.support.ProjectParameters")],S);var d=S;const T=(0,n.bo)(d),I=new n.aq({esriGeometryRelationCross:"cross",esriGeometryRelationDisjoint:"disjoint",esriGeometryRelationIn:"in",esriGeometryRelationInteriorIntersection:"interior-intersection",esriGeometryRelationIntersection:"intersection",esriGeometryRelationLineCoincidence:"line-coincidence",esriGeometryRelationLineTouch:"line-touch",esriGeometryRelationOverlap:"overlap",esriGeometryRelationPointTouch:"point-touch",esriGeometryRelationTouch:"touch",esriGeometryRelationWithin:"within",esriGeometryRelationRelation:"relation"});let O=class extends n.ao{constructor(e){super(e),this.geometries1=null,this.geometries2=null,this.relation=null,this.relationParameter=null}};(0,n.Z)([(0,n._)({json:{read:{reader:e=>e?e.map((e=>(0,n.J)(e))):null},write:{writer:(e,t)=>{t.geometries1=e.map((e=>e.toJSON()))}}}})],O.prototype,"geometries1",void 0),(0,n.Z)([(0,n._)({json:{read:{reader:e=>e?e.map((e=>(0,n.J)(e))):null},write:{writer:(e,t)=>{t.geometries2=e.map((e=>e.toJSON()))}}}})],O.prototype,"geometries2",void 0),(0,n.Z)([(0,n._)({type:String,json:{write:!0}})],O.prototype,"relation",void 0),(0,n.Z)([(0,n._)({type:String,json:{write:!0}})],O.prototype,"relationParameter",void 0),O=(0,n.Z)([(0,n.a0)("esri.tasks.support.RelationParameters")],O),O.from=(0,n.bo)(O);var U=O;const h=new n.aq({0:"default-curve-extension",1:"relocate-ends",2:"keep-end-attributes",4:"no-end-attributes",8:"no-extend-at-from",16:"no-extend-at-to"});let R=class extends n.ao{constructor(e){super(e),this.extendHow="default-curve-extension",this.polylines=null,this.trimExtendTo=null}};(0,n.Z)([(0,n._)({type:String,json:{write:!0}})],R.prototype,"extendHow",void 0),(0,n.Z)([(0,n._)({type:[n.v],json:{read:{reader:e=>e?e.map((e=>(0,n.J)(e))):null},write:{writer:(e,t)=>{t.polylines=e.map((e=>e.toJSON()))}}}})],R.prototype,"polylines",void 0),(0,n.Z)([(0,n._)({json:{read:{reader:e=>e?(0,n.J)(e):null},write:{writer:(e,t)=>{t.trimExtendTo=e.toJSON()}}}})],R.prototype,"trimExtendTo",void 0),R=(0,n.Z)([(0,n.a0)("esri.tasks.support.TrimExtendParameters")],R),R.from=(0,n.bo)(R);var J=R;let E=class extends s.p{constructor(e){super(e),this.url=null}areasAndLengths(e,t){return async function(e,t,r){const o=(0,s.r)(e),i={...o.query,f:"json",...t.toJSON()},a=(0,s.e)(i,r);return(0,n.U)(o.path+"/areasAndLengths",a).then((e=>e.data))}(this.url,e,t)}autoComplete(e,t,r){return async function(e,t,r,i){const a=t[0].spatialReference,l=(0,s.r)(e),u={...l.query,f:"json",sr:JSON.stringify(a.toJSON()),polygons:JSON.stringify(o(t).geometries),polylines:JSON.stringify(o(r).geometries)},c=(0,s.e)(u,i);return(0,n.U)(l.path+"/autoComplete",c).then((({data:e})=>(e.geometries||[]).map((({rings:e})=>new n.x({spatialReference:a,rings:e})))))}(this.url,e,t,r)}buffer(e,t){return async function(e,t,r){const o=(0,s.r)(e),i={...o.query,f:"json",...t.toJSON()},a=t.outSpatialReference||t.geometries[0].spatialReference,l=(0,s.e)(i,r);return(0,n.U)(o.path+"/buffer",l).then((e=>(e.data.geometries||[]).map((({rings:e})=>new n.x({spatialReference:a,rings:e})))))}(this.url,e,t)}convexHull(e,t){return async function(e,t,r){const i=t[0].spatialReference,a=(0,s.r)(e),l={...a.query,f:"json",sr:JSON.stringify(i.toJSON()),geometries:JSON.stringify(o(t))},u=(0,s.e)(l,r);return(0,n.U)(a.path+"/convexHull",u).then((({data:e})=>(0,n.J)(e.geometry).set({spatialReference:i})))}(this.url,e,t)}cut(e,t,r){return async function(e,t,r,o){const i=(0,s.r)(e),a=t[0].spatialReference,l={...o,query:{...i.query,f:"json",sr:JSON.stringify(a),target:JSON.stringify({geometryType:(0,n.ar)(t[0]),geometries:t}),cutter:JSON.stringify(r)}},u=await(0,n.U)(i.path+"/cut",l),{cutIndexes:c,geometries:f=[]}=u.data;return{cutIndexes:c,geometries:f.map((e=>{const t=(0,n.J)(e);return t.spatialReference=a,t}))}}(this.url,e,t,r)}densify(e,t){return async function(e,t,r){const o=t.geometries[0].spatialReference,i=(0,s.r)(e),a={...i.query,f:"json",...t.toJSON()},l=(0,s.e)(a,r);return(0,n.U)(i.path+"/densify",l).then((({data:e})=>(e.geometries||[]).map((e=>(0,n.J)(e).set({spatialReference:o})))))}(this.url,e,t)}difference(e,t,r){return async function(e,t,r,i){const a=t[0].spatialReference,l=(0,s.r)(e);let u={query:{...l.query,f:"json",sr:JSON.stringify(a.toJSON()),geometries:JSON.stringify(o(t)),geometry:JSON.stringify({geometryType:(0,n.ar)(r),geometry:r.toJSON()})}};return i&&(u={...i,...u}),(0,n.U)(l.path+"/difference",u).then((({data:e})=>(e.geometries||[]).map((e=>(0,n.J)(e).set({spatialReference:a})))))}(this.url,e,t,r)}distance(e,t){return async function(e,t,r){const o=(0,s.r)(e),i={...o.query,f:"json",...t.toJSON()},a=(0,s.e)(i,r);return(0,n.U)(o.path+"/distance",a).then((({data:e})=>e&&e.distance))}(this.url,e,t)}fromGeoCoordinateString(e,t){return async function(e,t,r){const o={};null!=t.sr&&"object"==typeof t.sr?o.sr=t.sr.wkid||JSON.stringify(t.sr):o.sr=t.sr,o.strings=JSON.stringify(t.strings);const i=t.conversionType||"mgrs";o.conversionType=a.toJSON(i),o.conversionMode=t.conversionMode;const l=(0,s.r)(e),u={...l.query,f:"json",...o},c=(0,s.e)(u,r);return(0,n.U)(l.path+"/fromGeoCoordinateString",c).then((({data:e})=>e.coordinates))}(this.url,e,t)}generalize(e,t){return async function(e,t,r){const o=(t=c.from(t)).toJSON(),i=function(e){const{geometries:t,deviationUnit:r,maxDeviation:s}=e.toJSON(),o={maxDeviation:s};return t&&t.length&&(o.geometries=JSON.stringify({geometryType:(0,n.ar)(t[0]),geometries:t}),o.sr=JSON.stringify(t[0].spatialReference)),l.write(r,o,"deviationUnit"),o}(t),a=(0,s.r)(e),u={...a.query,f:"json",...i},f=o.geometries[0].spatialReference,p=(0,s.e)(u,r);return(0,n.U)(a.path+"/generalize",p).then((({data:e})=>(e.geometries||[]).map((e=>(0,n.J)(e).set({spatialReference:f})))))}(this.url,e,t)}intersect(e,t,r){return async function(e,t,r,i){const a=t[0].spatialReference,l=(0,s.r)(e),u={...l.query,f:"json",sr:JSON.stringify(a.toJSON()),geometries:JSON.stringify(o(t)),geometry:JSON.stringify({geometryType:(0,n.ar)(r),geometry:r.toJSON()})},c=(0,s.e)(u,i);return(0,n.U)(l.path+"/intersect",c).then((({data:e})=>(e.geometries||[]).map((e=>(0,n.J)(e).set({spatialReference:a})))))}(this.url,e,t,r)}labelPoints(e,t){return function(e,t,r){const o=t.map((e=>e.toJSON())),i=t[0].spatialReference,a=(0,s.r)(e),l={...a.query,f:"json",sr:i.wkid?i.wkid:JSON.stringify(i.toJSON()),polygons:JSON.stringify(o)},u=(0,s.e)(l,r);return(0,n.U)(a.path+"/labelPoints",u).then((({data:e})=>(e.labelPoints||[]).map((e=>(0,n.J)(e).set({spatialReference:i})))))}(this.url,e,t)}lengths(e,t){return async function(e,t,r){const o=function(e){const{polylines:t,lengthUnit:r,geodesic:n,calculationType:s}=e.toJSON(),o={};o.polylines=JSON.stringify(t);const i=e.polylines[0].spatialReference;return o.sr=i.wkid?i.wkid:JSON.stringify(i.toJSON()),r&&(o.lengthUnit=r),n&&(o.geodesic=n),s&&(o.calculationType=f.toJSON(s)),o}(t=N.from(t)),i=(0,s.r)(e),a={...i.query,f:"json",...o},l=(0,s.e)(a,r);return(0,n.U)(i.path+"/lengths",l).then((({data:e})=>e))}(this.url,e,t)}offset(e,t){return async function(e,t,r){const o=function(e){const{geometries:t,bevelRatio:r,offsetDistance:s,offsetHow:o,offsetUnit:i}=e.toJSON(),a={bevelRatio:r,offsetDistance:s};return t&&t.length&&(a.geometries=JSON.stringify({geometryType:(0,n.ar)(t[0]),geometries:t}),a.sr=JSON.stringify(t[0].spatialReference)),o&&(a.offsetHow=y.toJSON(o)),i&&(a.offsetUnit=m.toJSON(i)),a}(t=g.from(t)),i=(0,s.r)(e),a={...i.query,f:"json",...o},l=t.geometries[0].spatialReference,u=(0,s.e)(a,r);return(0,n.U)(i.path+"/offset",u).then((({data:e})=>(e.geometries||[]).map((e=>(0,n.J)(e).set({spatialReference:l})))))}(this.url,e,t)}project(e,t){return async function(e,t,r){t=T(t);const o=(0,s.r)(e),a={...o.query,f:"json",...t.toJSON()},l=t.outSpatialReference,u=(0,n.ar)(t.geometries[0]),c=(0,s.e)(a,r);return(0,n.U)(o.path+"/project",c).then((({data:{geometries:e}})=>i(e,u,l)))}(this.url,e,t)}relation(e,t){return async function(e,t,r){const o=function(e){const{geometries1:t,geometries2:r,relation:s,relationParameter:o}=e.toJSON(),i={};if(t&&t.length){i.geometries1=JSON.stringify({geometryType:(0,n.ar)(t[0]),geometries:t});const e=t[0].spatialReference;i.sr=e.wkid?e.wkid:JSON.stringify(e)}return r&&r.length>0&&(i.geometries2=JSON.stringify({geometryType:(0,n.ar)(r[0]),geometries:r})),s&&(i.relation=I.toJSON(s)),o&&(i.relationParam=o),i}(t=U.from(t)),i=(0,s.r)(e),a={...i.query,f:"json",...o},l=(0,s.e)(a,r);return(0,n.U)(i.path+"/relation",l).then((({data:e})=>e.relations))}(this.url,e,t)}reshape(e,t,r){return async function(e,t,r,o){const i=t.spatialReference,a=(0,s.r)(e),l={...a.query,f:"json",sr:JSON.stringify(i.toJSON()),target:JSON.stringify({geometryType:(0,n.ar)(t),geometry:t.toJSON()}),reshaper:JSON.stringify(r.toJSON())},u=(0,s.e)(l,o);return(0,n.U)(a.path+"/reshape",u).then((({data:e})=>(0,n.J)(e.geometry).set({spatialReference:i})))}(this.url,e,t,r)}simplify(e,t){return async function(e,t,r){const s="string"==typeof e?(0,n.j)(e):e,a=t[0].spatialReference,l=(0,n.ar)(t[0]),u={...r,query:{...s.query,f:"json",sr:a.wkid?a.wkid:JSON.stringify(a),geometries:JSON.stringify(o(t))}},{data:c}=await(0,n.U)(s.path+"/simplify",u);return i(c.geometries,l,a)}(this.url,e,t)}toGeoCoordinateString(e,t){return async function(e,t,r){const o={};null!=t.sr&&"object"==typeof t.sr?o.sr=t.sr.wkid||JSON.stringify(t.sr):o.sr=t.sr,o.coordinates=JSON.stringify(t.coordinates);const i=t.conversionType||"mgrs";o.conversionType=a.toJSON(i),o.conversionMode=t.conversionMode,o.numOfDigits=t.numOfDigits,o.rounding=t.rounding,o.addSpaces=t.addSpaces;const l=(0,s.r)(e),u={...l.query,f:"json",...o},c=(0,s.e)(u,r);return(0,n.U)(l.path+"/toGeoCoordinateString",c).then((({data:e})=>e.strings))}(this.url,e,t)}trimExtend(e,t){return async function(e,t,r){const o=function(e){const{extendHow:t,polylines:r,trimExtendTo:n}=e.toJSON(),s={};return s.extendHow=h.toJSON(t),r&&r.length&&(s.polylines=JSON.stringify(r),s.sr=JSON.stringify(r[0].spatialReference)),n&&(s.trimExtendTo=JSON.stringify(n)),s}(t=J.from(t)),i=(0,s.r)(e),a={...i.query,f:"json",...o},l=t.sr,u=(0,s.e)(a,r);return(0,n.U)(i.path+"/trimExtend",u).then((({data:e})=>(e.geometries||[]).map((({paths:e})=>new n.v({spatialReference:l,paths:e})))))}(this.url,e,t)}union(e,t){return async function(e,t,r){const i=t[0].spatialReference,a=(0,s.r)(e),l={...a.query,f:"json",sr:JSON.stringify(i.toJSON()),geometries:JSON.stringify(o(t))},u=(0,s.e)(l,r);return(0,n.U)(a.path+"/union",u).then((({data:e})=>(0,n.J)(e.geometry).set({spatialReference:i})))}(this.url,e,t)}};E.UNIT_METER=9001,E.UNIT_GERMAN_METER=9031,E.UNIT_FOOT=9002,E.UNIT_SURVEY_FOOT=9003,E.UNIT_CLARKE_FOOT=9005,E.UNIT_FATHOM=9014,E.UNIT_NAUTICAL_MILE=9030,E.UNIT_SURVEY_CHAIN=9033,E.UNIT_SURVEY_LINK=9034,E.UNIT_SURVEY_MILE=9035,E.UNIT_KILOMETER=9036,E.UNIT_CLARKE_YARD=9037,E.UNIT_CLARKE_CHAIN=9038,E.UNIT_CLARKE_LINK=9039,E.UNIT_SEARS_YARD=9040,E.UNIT_SEARS_FOOT=9041,E.UNIT_SEARS_CHAIN=9042,E.UNIT_SEARS_LINK=9043,E.UNIT_BENOIT_1895A_YARD=9050,E.UNIT_BENOIT_1895A_FOOT=9051,E.UNIT_BENOIT_1895A_CHAIN=9052,E.UNIT_BENOIT_1895A_LINK=9053,E.UNIT_BENOIT_1895B_YARD=9060,E.UNIT_BENOIT_1895B_FOOT=9061,E.UNIT_BENOIT_1895B_CHAIN=9062,E.UNIT_BENOIT_1895B_LINK=9063,E.UNIT_INDIAN_FOOT=9080,E.UNIT_INDIAN_1937_FOOT=9081,E.UNIT_INDIAN_1962_FOOT=9082,E.UNIT_INDIAN_1975_FOOT=9083,E.UNIT_INDIAN_YARD=9084,E.UNIT_INDIAN_1937_YARD=9085,E.UNIT_INDIAN_1962_YARD=9086,E.UNIT_INDIAN_1975_YARD=9087,E.UNIT_FOOT_1865=9070,E.UNIT_RADIAN=9101,E.UNIT_DEGREE=9102,E.UNIT_ARCMINUTE=9103,E.UNIT_ARCSECOND=9104,E.UNIT_GRAD=9105,E.UNIT_GON=9106,E.UNIT_MICRORADIAN=9109,E.UNIT_ARCMINUTE_CENTESIMAL=9112,E.UNIT_ARCSECOND_CENTESIMAL=9113,E.UNIT_MIL6400=9114,E.UNIT_BRITISH_1936_FOOT=9095,E.UNIT_GOLDCOAST_FOOT=9094,E.UNIT_INTERNATIONAL_CHAIN=109003,E.UNIT_INTERNATIONAL_LINK=109004,E.UNIT_INTERNATIONAL_YARD=109001,E.UNIT_STATUTE_MILE=9093,E.UNIT_SURVEY_YARD=109002,E.UNIT_50KILOMETER_LENGTH=109030,E.UNIT_150KILOMETER_LENGTH=109031,E.UNIT_DECIMETER=109005,E.UNIT_CENTIMETER=109006,E.UNIT_MILLIMETER=109007,E.UNIT_INTERNATIONAL_INCH=109008,E.UNIT_US_SURVEY_INCH=109009,E.UNIT_INTERNATIONAL_ROD=109010,E.UNIT_US_SURVEY_ROD=109011,E.UNIT_US_NAUTICAL_MILE=109012,E.UNIT_UK_NAUTICAL_MILE=109013,E.UNIT_SQUARE_INCHES="esriSquareInches",E.UNIT_SQUARE_FEET="esriSquareFeet",E.UNIT_SQUARE_YARDS="esriSquareYards",E.UNIT_ACRES="esriAcres",E.UNIT_SQUARE_MILES="esriSquareMiles",E.UNIT_SQUARE_MILLIMETERS="esriSquareMillimeters",E.UNIT_SQUARE_CENTIMETERS="esriSquareCentimeters",E.UNIT_SQUARE_DECIMETERS="esriSquareDecimeters",E.UNIT_SQUARE_METERS="esriSquareMeters",E.UNIT_ARES="esriAres",E.UNIT_HECTARES="esriHectares",E.UNIT_SQUARE_KILOMETERS="esriSquareKilometers",(0,n.Z)([(0,n._)()],E.prototype,"url",void 0),E=(0,n.Z)([(0,n.a0)("esri.tasks.GeometryService")],E);const A=E},11115:(e,t,r)=>{r.d(t,{e:()=>i,n:()=>l,p:()=>o,r:()=>a});var n=r(47817);r(58574);let s=class extends n.a1{constructor(...e){super(...e),this.requestOptions=null,this.url=null}normalizeCtorArgs(e,t){return"string"!=typeof e?e:{url:e,...t}}get parsedUrl(){return this._parseUrl(this.url)}_parseUrl(e){return e?(0,n.j)(e):null}_encode(e,t,r){const n={};for(const s in e){if("declaredClass"===s)continue;const o=e[s];if(null!=o&&"function"!=typeof o)if(Array.isArray(o)){n[s]=[];for(let e=0;e<o.length;e++)n[s][e]=this._encode(o[e])}else if("object"==typeof o)if(o.toJSON){const e=o.toJSON(r&&r[s]);n[s]=t?e:JSON.stringify(e)}else n[s]=t?o:JSON.stringify(o);else n[s]=o}return n}};(0,n.Z)([(0,n._)({readOnly:!0})],s.prototype,"parsedUrl",null),(0,n.Z)([(0,n._)()],s.prototype,"requestOptions",void 0),(0,n.Z)([(0,n._)({type:String})],s.prototype,"url",void 0),s=(0,n.Z)([(0,n.a0)("esri.tasks.Task")],s);var o=s;function i(e,t){let r={query:e};return t&&(r={...t,...r},r.query={...r.query,...t.query}),r}function a(e){return"string"==typeof e?(0,n.j)(e):e}function l(e,t,r){const n={};for(const s in e){if("declaredClass"===s)continue;const o=e[s];if(null!=o&&"function"!=typeof o)if(Array.isArray(o)){n[s]=[];for(let e=0;e<o.length;e++)n[s][e]=l(o[e])}else if("object"==typeof o)if(o.toJSON){const e=o.toJSON(r&&r[s]);n[s]=t?e:JSON.stringify(e)}else n[s]=t?o:JSON.stringify(o);else n[s]=o}return n}}}]);